[{"authors":["Schroeder, Jan and Berger, Christian"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"8fd45cbe3bbae84618a72f2264a5f956","permalink":"https://chrberger.github.io/publication/sb21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/sb21/","section":"publication","summary":"","tags":null,"title":"Environmental Factors for Measurement and Prediction of Software Growth in the Automotive Industry","type":"publication"},{"authors":["Yu, Yushu and Benderius, Ola and Berger, Christian and Kang, Yue"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6d4fad61fc3fdec6ddd0c1b4d7aeffbc","permalink":"https://chrberger.github.io/publication/ybbk21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/ybbk21/","section":"publication","summary":"","tags":null,"title":"Formally Robust and Safe Trajectory Synthesis and Tracking for Autonomous Vehicles","type":"publication"},{"authors":["Sica de Andrade, Hugo and Benderius, Ola and Berger, Christian and Crnkovic, Ivica and Bosch, Jan"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"e4590e7d80cb6d23401af970bad7a526","permalink":"https://chrberger.github.io/publication/abb+21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/abb+21/","section":"publication","summary":"","tags":null,"title":"HPM-Frame: A Decision Framework for Executing Software on Heterogeneous Platforms","type":"publication"},{"authors":["Henriksson, Jens and Berger, Christian and Borg, Markus and Tornberg, Lars and Sathyamoorthy, Sankar Raman and Englund, Cristofer"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"4aef29bea2c54fa3e3fec74e2190ee2c","permalink":"https://chrberger.github.io/publication/hbb+21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/hbb+21/","section":"publication","summary":"Many companies aim for delivering systems for autonomous driving reaching out for SAE Level 5. As these systems run much more complex software than typical premium cars of today, a thorough testing strategy is needed. Early prototyping of such systems can be supported using recorded data from onboard and surrounding sensors as long as open-loop testing is applicable; later, though, closed-loop testing is necessary-either by testing on the real vehicle or by using a virtual testing environment. This paper is a substantial extension of our work presented at the 2017 IEEE International Conference on Intelligent Transportation Systems (ITSC) that was surveying the area of publicly available driving datasets. Our previous results are extended by additional datasets and complemented with a summary of publicly available virtual testing environments to support closed-loop testing. As such, a steadily growing number of 37 datasets for open-loop testing and 22 virtual testing environments for closed-loop testing have been surveyed in detailed. Thus, conducting research toward autonomous driving is significantly supported from complementary community efforts: A growing number of publicly accessible datasets allow for experiments with perception approaches or training and testing machine-learning-based algorithms, while virtual testing environments enable end-to-end simulations.","tags":null,"title":"Performance analysis of out-of-distribution detection on trained neural networks","type":"publication"},{"authors":["Svensson, Lars and Bujarbaruah, Monimoy and Karsolia, Arpit and Berger, Christian and TÃ¶rngren, Martin"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"c7c3e0e06950795d4ea838973d060ed0","permalink":"https://chrberger.github.io/publication/sbk+21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/sbk+21/","section":"publication","summary":"In this paper we address the problem of motion planning and control at the limits of handling, under locally varying traction conditions. We propose a novel solution method where locally varying traction is represented by time-varying tire force constraints. A constrained finite time optimal control problem is solved in a receding horizon fashion, imposing these time-varying constraints. Furthermore, we employ a sampling augmentation procedure to address the problems of infeasibility and sensitivity to local minima that arises when the constraint configuration is altered. We validate the proposed algorithm on a Volvo FH16 heavy-duty vehicle, in a range of critical scenarios. Experimental results indicate that traction adaptation improves the vehicle's capacity to avoid accidents, both when adapting to low and high local traction.","tags":null,"title":"Traction Adaptive Motion Planning at the Limits of Handling","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Antinyan, Vard and Hajredini, Fisnik and Manesh, Sepehr Afrouzi"],"categories":null,"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6df9da64261ac97876d4b025675cd04f","permalink":"https://chrberger.github.io/publication/sba+21/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/sba+21/","section":"publication","summary":"","tags":null,"title":"Understanding and Measuring Maintainability of Simulink Models","type":"publication"},{"authors":["Giaimo, Federico and Andrade, Hugo, and Berger, Christian"],"categories":null,"content":"","date":1606780800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606780800,"objectID":"32e8645f494a62dcd52e20996b66d613","permalink":"https://chrberger.github.io/publication/gab20/","publishdate":"2020-12-01T00:00:00Z","relpermalink":"/publication/gab20/","section":"publication","summary":"","tags":null,"title":"Continuous experimentation and the cyber-physical systems challenge: An overview of the literature and the industrial perspective","type":"publication"},{"authors":["Sica de Andrade, Hugo and Berger, Christian and Crnknovic, Ivica and Bosch, Jan"],"categories":null,"content":"","date":1606780800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606780800,"objectID":"11aaea59bd3a3ebe52d12d523d487c18","permalink":"https://chrberger.github.io/publication/sbcb20/","publishdate":"2020-12-01T00:00:00Z","relpermalink":"/publication/sbcb20/","section":"publication","summary":"As the automotive industry focuses its attention more and more towards the software functionality of vehicles, techniques to deliver new software value at a fast pace are needed. Continuous Experimentation, a practice coming from the web-based systems world, is one of such techniques. It enables researchers and developers to use real-world data to verify their hypothesis and steer the software evolution based on performances and user preferences, reducing the reliance on simulations and guesswork. Several challenges prevent the verbatim adoption of this practice on automotive cyber-physical systems, e.g., safety concerns and limitations from computational resources; nonetheless, the automotive field is starting to take interest in this technique. This work aims at demonstrating and evaluating a prototypical Continuous Experimentation infrastructure, implemented on a distributed computational system housed in a commercial truck tractor that is used in daily operations by a logistic company on public roads. The system comprises computing units and sensors, and software deployment and data retrieval are only possible remotely via a mobile data connection due to the commercial interests of the logistics company. This study shows that the proposed experimentation process resulted in the development team being able to base software development choices on the real-world data collected during the experimental procedure. Additionally, a set of previously identified design criteria to enable Continuous Experimentation on automotive systems was discussed and their validity confirmed in the light of the presented work.","tags":null,"title":"Principles for Re-architecting Software for Heterogeneous Platforms","type":"publication"},{"authors":["Zavala, Edith and Franch, Xavier and Marco, Jordi and Berger, Christian"],"categories":null,"content":"","date":1604188800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604188800,"objectID":"7cc17a76ab829c0549504052824496ee","permalink":"https://chrberger.github.io/publication/zfmb20b/","publishdate":"2020-11-01T00:00:00Z","relpermalink":"/publication/zfmb20b/","section":"publication","summary":"Current Self-Adaptive Systems (SASs) such as Autonomous Vehicles (AVs) are systems able to deal with highly complex contexts. However, due to the use of static feedback loops they are not able to respond to unanticipated situations such as sensor faults. Previously, we have proposed HAFLoop (Highly Adaptive Feedback control Loop), an architecture for adaptive loops in SASs. In this paper, we incorporate HAFLoop into an AV solution that leverages machine learning techniques to determine the best monitoring strategy at runtime. We have evaluated our solution using real vehicles. Evaluation results are promising and demonstrate the great potential of our proposal.","tags":null,"title":"Adaptive monitoring for autonomous vehicles using the HAFLoop architecture","type":"publication"},{"authors":["Giaimo, Federico and Berger, Christian"],"categories":null,"content":"","date":1598918400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598918400,"objectID":"aed096e09beafeb0fddf3f6ab49f2c09","permalink":"https://chrberger.github.io/publication/gb20/","publishdate":"2020-09-01T00:00:00Z","relpermalink":"/publication/gb20/","section":"publication","summary":"As the automotive industry focuses its attention more and more towards the software functionality of vehicles, techniques to deliver new software value at a fast pace are needed. Continuous Experimentation, a practice coming from the web-based systems world, is one of such techniques. It enables researchers and developers to use real-world data to verify their hypothesis and steer the software evolution based on performances and user preferences, reducing the reliance on simulations and guesswork. Several challenges prevent the verbatim adoption of this practice on automotive cyber-physical systems, e.g., safety concerns and limitations from computational resources; nonetheless, the automotive field is starting to take interest in this technique. This work aims at demonstrating and evaluating a prototypical Continuous Experimentation infrastructure, implemented on a distributed computational system housed in a commercial truck tractor that is used in daily operations by a logistic company on public roads. The system comprises computing units and sensors, and software deployment and data retrieval are only possible remotely via a mobile data connection due to the commercial interests of the logistics company. This study shows that the proposed experimentation process resulted in the development team being able to base software development choices on the real-world data collected during the experimental procedure. Additionally, a set of previously identified design criteria to enable Continuous Experimentation on automotive systems was discussed and their validity confirmed in the light of the presented work.","tags":null,"title":"Continuous experimentation for automotive software on the example of a heavy commercial vehicle in daily operation","type":"publication"},{"authors":["Zavala, Edith and Franch, Xavier and Marco, Jordi and Berger, Christian"],"categories":null,"content":"","date":1585699200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585699200,"objectID":"3c9db86d85e9984e37b6b2ec14d18954","permalink":"https://chrberger.github.io/publication/zfmb20/","publishdate":"2020-04-01T00:00:00Z","relpermalink":"/publication/zfmb20/","section":"publication","summary":"Most of the current self-adaptive systems (SASs) rely on static feedback loops such as the IBM's MAPE-K loop for managing their adaptation process. Static loops do not allow SASs to react to runtime events such as changing adaptation requirements or MAPE-K elements' faults. In order to address this issue, some solutions have emerged for manually or automatically perform changes on SASs' feedback loops. However, from the software engineering perspective, most of the proposals cannot be reused or extended by other SASs. In this paper, we present HAFLoop (Highly Adaptive Feedback control Loop), a generic architectural proposal that aims at easing and fastening the design and implementation of adaptive feedback loops in modern SASs. Our solution enables both structural and parameter adaptation of the loop elements. Moreover, it provides a highly modular design that allows SASs' owners to support a variety of feedback loop settings from centralized to fully decentralized. In this work, HAFLoop has been implemented as a framework for Java-based systems and evaluated in two emerging software application domains: self-driving vehicles and IoT networks. Results demonstrate that our proposal easies and accelerates the development of adaptive feedback loops as well as how it could help to address some of the most relevant challenges of self-driving vehicles and IoT applications. Concretely, HAFLoop has demonstrated to improve SASs' feedback loops' runtime availability and operation.","tags":null,"title":"HAFLoop: An architecture for supporting Highly Adaptive Feedback Loops in self-adaptive systems","type":"publication"},{"authors":["Nguyen, BjÃ¶rnborg and Berger, Christian and Benderius, Ola"],"categories":null,"content":"","date":1572566400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572566400,"objectID":"a7f6ec125946e320b968f0d1bf14013d","permalink":"https://chrberger.github.io/publication/nbb19/","publishdate":"2019-11-01T00:00:00Z","relpermalink":"/publication/nbb19/","section":"publication","summary":"Until now there have been few formalized methods for conducting systematic benchmarking aiming at reproducible results when it comes to computer vision algorithms. This is evident from lists of algorithms submitted to prominent datasets, authors of a novel method in many cases primarily state the performance of their algorithms in relation to a shallow description of the hardware system where it was evaluated. There are significant problems linked to this non-systematic approach of reporting performance, especially when comparing different approaches and when it comes to the reproducibility of claimed results. Furthermore how to conduct retrospective performance analysis such as an algorithm's suitability for embedded real-time systems over time with underlying hardware and software changes in place. This paper proposes and demonstrates a systematic way of addressing such challenges by adopting containerization of software aiming at formalization and reproducibility of benchmarks. Our results show maintainers of broadly accepted datasets in the computer vision community to strive for systematic comparison and reproducibility of submissions to increase the value and adoption of computer vision algorithms in the future.","tags":null,"title":"Systematic benchmarking for reproducibility of computer vision algorithms for real-time systems: The example of optic flow estimation","type":"publication"},{"authors":["Mamun, Md Abdullah Al and Martini, Antonio and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1569888000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569888000,"objectID":"178b1151a37f6ce8465aa863c796a29d","permalink":"https://chrberger.github.io/publication/mms+19/","publishdate":"2019-10-01T00:00:00Z","relpermalink":"/publication/mms+19/","section":"publication","summary":"Context: Technical debt is known to impact maintainability of software. As source code files grow in size, maintainability becomes more challenging. Therefore, it is expected that the density of technical debt in larger files would be reduced for the sake of maintainability. Objective: This exploratory study investigates whether a newly introduced metric 'technical debt density trend' helps to better understand and explain the evolution of technical debt. The 'technical debt density trend' metric is the slope of the line of two successive 'technical debt density' measures corresponding to the 'lines of code' values of two consecutive revisions of a source code file. Method: This study has used 11,822 commits or revisions of 4,013 Java source files from 21 open source projects. For the technical debt measure, SonarQube tool is used with 138 code smells. Results: This study finds that 'technical debt density trend' metric has interesting characteristics that make it particularly attractive to understand the pattern of accrual and repayment of technical debt by breaking down a technical debt measure into multiple components, e.g., 'technical debt density' can be broken down into two components showing mean density corresponding to revisions that accrue technical debt and mean density corresponding to revisions that repay technical debt. The use of 'technical debt density trend' metric helps us understand the evolution of technical debt with greater insights.","tags":null,"title":"Evolution of Technical Debt: An Exploratory Study","type":"publication"},{"authors":["Henriksson, Jens and Berger, Christian and Borg, Markus and Tornberg, Lars and Sathyamoorthy, Sankar Raman and Englund, Cristofer"],"categories":null,"content":"","date":1567296000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567296000,"objectID":"7f6c788c12b639012e537988fc1f3b97","permalink":"https://chrberger.github.io/publication/hbb+19/","publishdate":"2019-09-01T00:00:00Z","relpermalink":"/publication/hbb+19/","section":"publication","summary":"Several areas have been improved with Deep Learning during the past years. For non-safety related products adoption of AI and ML is not an issue, whereas in safety critical applications, robustness of such approaches is still an issue. A common challenge for Deep Neural Networks (DNN) occur when exposed to out-of-distribution samples that are previously unseen, where DNNs can yield high confidence predictions despite no prior knowledge of the input. In this paper we analyse two supervisors on two well-known DNNs with varied setups of training and find that the outlier detection performance improves with the quality of the training procedure. We analyse the performance of the supervisor after each epoch during the training cycle, to investigate supervisor performance as the accuracy converges. Understanding the relationship between training results and supervisor performance is valuable to improve robustness of the model and indicates where more work has to be done to create generalized models for safety critical applications.","tags":null,"title":"Performance Analysis of Out-of-Distribution Detection on Various Trained Neural Networks","type":"publication"},{"authors":["Henriksson, Jens and Berger, Christian and Borg, Markus and Tornberg, Lars and Sathyamoorthy, Sankar Raman and Englund, Cristofer and Ursig, Stig"],"categories":null,"content":"","date":1567296000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567296000,"objectID":"cee62da866b880a596f4f58c914056e9","permalink":"https://chrberger.github.io/publication/hbb+19b/","publishdate":"2019-09-01T00:00:00Z","relpermalink":"/publication/hbb+19b/","section":"publication","summary":"Deep Neural Networks (DNN) have improved the quality of several non-safety related products in the past years. However, before DNNs should be deployed to safety-critical applications, their robustness needs to be systematically analyzed. A common challenge for DNNs occurs when input is dissimilar to the training set, which might lead to high confidence predictions despite proper knowledge of the input. Several previous studies have proposed to complement DNNs with a supervisor that detects when inputs are outside the scope of the network. Most of these supervisors, however, are developed and tested for a selected scenario using a specific performance metric. In this work, we emphasize the need to assess and compare the performance of supervisors in a structured way. We present a framework constituted by four datasets organized in six test cases combined with seven evaluation metrics. The test cases provide varying complexity and include data from publicly available sources as well as a novel dataset consisting of images from simulated driving scenarios. The latter we plan to make publicly available. Our framework can be used to support DNN supervisor evaluation, which in turn could be used to motive development, validation, and deployment of DNNs in safety-critical applications.","tags":null,"title":"Towards Structured Evaluation of Deep Neural Network Supervisors","type":"publication"},{"authors":["Mamun, Md Abdullah and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564617600,"objectID":"019619a1ede1dba9d37544ab466f963d","permalink":"https://chrberger.github.io/publication/mbh19/","publishdate":"2019-08-01T00:00:00Z","relpermalink":"/publication/mbh19/","section":"publication","summary":"","tags":null,"title":"Effects of measurements on correlations of software code metrics","type":"publication"},{"authors":["Giaimo, Federico and Sica de Andrade, Hugo and Berger, Christian"],"categories":null,"content":"","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564617600,"objectID":"99e731c44311b43f24d5e0f40a6f0f70","permalink":"https://chrberger.github.io/publication/gab19/","publishdate":"2019-08-01T00:00:00Z","relpermalink":"/publication/gab19/","section":"publication","summary":"Recently, an increasingly growing number of companies is focusing on achieving self-driving systems towards SAE level 3 and higher. Such systems will have much more complex capabilities than today's advanced driver assistance systems (ADAS) like adaptive cruise control and lane-keeping assistance. For complex software systems in the Web-application domain, the logical successor for Continuous Integration and Deployment (CI/CD) is known as Continuous Experimentation (CE), where product owners jointly with engineers systematically run A/B experiments on possible new features to get quantifiable data about a feature's adoption from the users. While this methodology is increasingly adopted in software-intensive companies, our study is set out to explore advantages and challenges when applying CE during the development and roll-out of functionalities required for self-driving vehicles. This paper reports about the design and results from a multiple case study that was conducted at four companies including two automotive OEMs with a long history of developing vehicles, a Tier-1 supplier, and a start-up company within the area of automated driving systems. Unanimously, all expect higher quality and fast roll-out cycles to the fleet; as major challenges, however, safety concerns next to organizational structures are mentioned.","tags":null,"title":"The Automotive Take on Continuous Experimentation: A Multiple Case Study","type":"publication"},{"authors":["Lotz, Jannik and Vogelsang, Andreas and Berger, Christian and Benderius, Ola"],"categories":null,"content":"","date":1551398400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551398400,"objectID":"9014188d48b65f32f7c4bb3787b5c12a","permalink":"https://chrberger.github.io/publication/lvbb19/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/publication/lvbb19/","section":"publication","summary":"The technological advancements of recent years have steadily increased the complexity of vehicle-internal software systems, and the ongoing development towards autonomous driving will further aggravate this situation. This is leading to a level of complexity that is pushing the limits of existing vehicle software architectures and system designs. By changing the software structure to a service-based architecture, companies in other domains successfully managed the rising complexity and created a more agile and future-oriented development process. This paper presents a case-study investigating the feasibility and possible effects of changing the software architecture for a complex driver assistance function to a microservice architecture. The complete procedure is described, starting with the description of the software-environment and the corresponding requirements, followed by the implementation, and the final testing. In addition, this paper provides a high-level evaluation of the microservice architecture for the automotive use-case. The results show that microservice architectures can reduce complexity and time-consuming process steps and make the automotive software systems prepared for upcoming challenges as long as the principles of microservice architectures are carefully followed.","tags":null,"title":"Microservice Architectures for Advanced Driver Assistance Systems: A Case-Study","type":"publication"},{"authors":["Kang, Yue and Yin, Hang and Berger, Christian"],"categories":null,"content":"","date":1551398400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551398400,"objectID":"48db07ef0035c2b28fa0cafbb5c24c54","permalink":"https://chrberger.github.io/publication/kyb19/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/publication/kyb19/","section":"publication","summary":"Many companies aim for delivering systems for autonomous driving reaching out for SAE Level 5. As these systems run much more complex software than typical premium cars of today, a thorough testing strategy is needed. Early prototyping of such systems can be supported using recorded data from onboard and surrounding sensors as long as open-loop testing is applicable; later, though, closed-loop testing is necessary-either by testing on the real vehicle or by using a virtual testing environment. This paper is a substantial extension of our work presented at the 2017 IEEE International Conference on Intelligent Transportation Systems (ITSC) that was surveying the area of publicly available driving datasets. Our previous results are extended by additional datasets and complemented with a summary of publicly available virtual testing environments to support closed-loop testing. As such, a steadily growing number of 37 datasets for open-loop testing and 22 virtual testing environments for closed-loop testing have been surveyed in detailed. Thus, conducting research toward autonomous driving is significantly supported from complementary community efforts: A growing number of publicly accessible datasets allow for experiments with perception approaches or training and testing machine-learning-based algorithms, while virtual testing environments enable end-to-end simulations.","tags":null,"title":"Test your self-driving algorithm: An overview of publicly available driving datasets and virtual testing environments","type":"publication"},{"authors":["Berger, Christian and Penzenstadler, Birgit and DrÃ¶gehorn, Olaf"],"categories":null,"content":"","date":1525132800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1525132800,"objectID":"188f5816d1cfd39194c275195ed2e759","permalink":"https://chrberger.github.io/publication/bpd18/","publishdate":"2018-05-01T00:00:00Z","relpermalink":"/publication/bpd18/","section":"publication","summary":"Today's industries in various domains are becoming more and more driven by software as innovator. They range from web applications powering our increasingly digitalized daily lives to deeply embedded systems driving complex and safety-critical cyber-physical systems (CPS) as in, for example, self-driving vehicles. Companies need to continuously rejuvenate their product portfolio for adopting new ideas to remain competitive. A recent idea that is permeating from its original application domain of financial use cases are blockchains, where researchers and companies try to apply key ideas behind them to other domains.","tags":null,"title":"On Using Blockchains for Safety-Critical Systems","type":"publication"},{"authors":["Benderius, Ola and Berger, Christian and Malmsten Lundgren, Victor"],"categories":null,"content":"","date":1522540800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1522540800,"objectID":"5f56aca28ccf2e7b615207bcdac80db3","permalink":"https://chrberger.github.io/publication/bbm18/","publishdate":"2018-04-01T00:00:00Z","relpermalink":"/publication/bbm18/","section":"publication","summary":"This paper provides an in-depth description of the best rated human-machine interface that was presented during the 2016 Grand Cooperative Driving Challenge. It was demonstrated by the Chalmers Truck Team as the envisioned interface to their open source software framework OpenDLV, which is used to power Chalmers' fleet of self-driving vehicles. The design originates from the postulate that the vehicle is fully autonomous to handle even complex traffic scenarios. Thus, by including external and internal interfaces, and introducing a show, don't tell principle, it aims at fulfilling the needs of the vehicle occupants as well as other participants in the traffic environment. The design also attempts to comply with, and slightly extend, the current traffic rules and legislation for the purpose of being realistic for full-scale implementation.","tags":null,"title":"The Best Rated Human-Machine Interface Design for Autonomous Vehicles in the 2016 Grand Cooperative Driving Challenge","type":"publication"},{"authors":["Mamun, Md Abdullah Al and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1506816000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506816000,"objectID":"86a4062c1847ad1d2e67e2fb6332a596","permalink":"https://chrberger.github.io/publication/mbh17/","publishdate":"2017-10-01T00:00:00Z","relpermalink":"/publication/mbh17/","section":"publication","summary":"","tags":null,"title":"Correlations of software code metrics: an empirical study","type":"publication"},{"authors":["Yin, Hang and Berger, Christian"],"categories":null,"content":"","date":1506816000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506816000,"objectID":"8ddf2a17039f321a0be45626f7646df6","permalink":"https://chrberger.github.io/publication/yb17b/","publishdate":"2017-10-01T00:00:00Z","relpermalink":"/publication/yb17b/","section":"publication","summary":"Data collection on public roads has been deemed a valuable activity along with the development of self-driving vehicles. The vehicle for data collection is typically equipped with a variety of sensors such as camera, LiDAR, radar, GPS, and IMU. The raw data of all sensors is logged on a disk while the vehicle is manually driven. The logged data can be subsequently used for training and testing different algorithms for autonomous driving, e.g., vehicle/pedestrian detection and tracking, SLAM, and motion estimation. Data collection is time-consuming and can sometimes be avoided by directly using existing datasets including sensor data collected by other researchers. A multitude of openly available datasets have been released to foster the research on automated driving. These datasets vary a lot in terms of traffic conditions, application focus, sensor setup, data format, size, tool support, and many other aspects. This paper presents an overview of 27 existing publicly available datasets containing data collected on public roads, compares each other from different perspectives, and provides guidelines for selecting the most suitable dataset for different purposes.","tags":null,"title":"When to Use What Data Set for Your Self-Driving Car Algorithm: An Overview of Publicly Available Driving Datasets","type":"publication"},{"authors":["Giaimo, Federico and Berger, Christian and Kirchner, Crispin"],"categories":null,"content":"","date":1504224000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504224000,"objectID":"62db9794d5cc9000410445d4ce025cc2","permalink":"https://chrberger.github.io/publication/gbk17/","publishdate":"2017-09-01T00:00:00Z","relpermalink":"/publication/gbk17/","section":"publication","summary":"Autonomous vehicles are slowly becoming reality thanks to the efforts of many academic and industrial organizations. Due to the complexity of the software powering these systems and the dynamicity of the development processes, an architectural solution capable of supporting long-term evolution and maintenance is required. Continuous Experimentation (CE) is an already increasingly adopted practice in software-intensive web-based software systems to steadily improve them over time. CE allows organizations to steer the development efforts by basing decisions on data collected about the system in its field of application. Despite the advantages of Continuous Experimentation, this practice is only rarely adopted in cyber-physical systems and in the automotive domain. Reasons for this include the strict safety constraints and the computational capabilities needed from the target systems. In this work, a concept for using Continuous Experimentation for resource-constrained platforms like a self-driving vehicle is outlined.","tags":null,"title":"Considerations about Continuous Experimentation for Resource-Constrained Platforms in Self-Driving Vehicles","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Knauss, Alessia and Preenja, Harri and Ali, Mohammad and Staron, Miroslaw and Herpel, Thomas"],"categories":null,"content":"","date":1504224000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504224000,"objectID":"b245039cc2f148fd77b98d71313feaad","permalink":"https://chrberger.github.io/publication/sbk+17b/","publishdate":"2017-09-01T00:00:00Z","relpermalink":"/publication/sbk+17b/","section":"publication","summary":"The size of a software artifact influences the software quality and impacts the development process. In industry, when software size exceeds certain thresholds, memory errors accumulate and development tools might not be able to cope anymore, resulting in a lengthy program start up times, failing builds, or memory problems at unpredictable times. Thus, foreseeing critical growth in software modules meets a high demand in industrial practice. Predicting the time when the size grows to the level where maintenance is needed prevents unexpected efforts and helps to spot problematic artifacts before they become critical. Although the amount of prediction approaches in literature is vast, it is unclear how well they fit with prerequisites and expectations from practice. In this paper, we perform an industrial case study at an automotive manufacturer to explore applicability and usability of prediction approaches in practice. In a first step, we collect the most relevant prediction approaches from literature, including both, approaches using statistics and machine learning. Furthermore, we elicit expectations towards predictions from practitioners using a survey and stakeholder workshops. At the same time, we measure software size of 48 software artifacts by mining four years of revision history, resulting in 4,547 data points. In the last step, we assess the applicability of state-of-the-art prediction approaches using the collected data by systematically analyzing how well they fulfill the practitioners' expectations. Our main contribution is a comparison of commonly used prediction approaches in a real world industrial setting while considering stakeholder expectations. We show that the approaches provide significantly different results regarding prediction accuracy and that the statistical approaches fit our data best.","tags":null,"title":"Predicting and Evaluating Software Model Growth in the Automotive Industry","type":"publication"},{"authors":["Yin, Hang and Berger, Christian"],"categories":null,"content":"","date":1496275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496275200,"objectID":"be677c91abcd84e83877750e18b930fb","permalink":"https://chrberger.github.io/publication/yb17a/","publishdate":"2017-06-01T00:00:00Z","relpermalink":"/publication/yb17a/","section":"publication","summary":"LiDAR sensors play a crucial role in autonomous driving and advanced driver assistance systems. By firing high-rate laser beams, a LiDAR device is able to project its surroundings as 2D or 3D point cloud, which can be used for different purposes such as object detection, map generation, localization, and navigation. Autonomous vehicles are often equipped with at least one multi-layer LiDAR sensor with 360-degree coverage to include as much information as possible in the point cloud. Such a device generates enormous amount of data which poses a challenge for data storage, real-time computation, and data transmission, as autonomous vehicles are typically resource-constrained systems. This paper proposes a lightweight and adaptive point cloud data structure to reduce the size of a 3D point cloud. The suggested data structure can be flexibly configured with different parameters to adapt for precision, distance coverage, and reflectivity resolution. The precision of the data structure is evaluated using a 16-layer Velodyne LiDAR sensor (VLP-16) to collect data in the city area of AstaZero proving ground and Gothenburg downtown. Our results show that the adaptive data structure can consume only 1/8th of the original point cloud size and hence, it is particularly suitable for applications with limited hardware resources or certain tolerance to precision of the point cloud. The suggested concept is also generalizable to other types of point cloud providing sensors.","tags":null,"title":"Mastering Data Complexity for Autonomous Driving with Adaptive Point Clouds for Urban Environments","type":"publication"},{"authors":["Knauss, Alessia and Schroeder, Jan and Berger, Christian and Eriksson, Henrik"],"categories":null,"content":"","date":1493596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493596800,"objectID":"f1d10ad1b50c27a128c71df6990efc82","permalink":"https://chrberger.github.io/publication/ksbe17/","publishdate":"2017-05-01T00:00:00Z","relpermalink":"/publication/ksbe17/","section":"publication","summary":"The technology in the area of automated vehicles is gaining speed and promises many advantages. However, with the recent introduction of conditionally automated driving, we have also seen accidents. Test protocols for both, conditionally automated (e.g., on highways) and automated vehicles do not exist yet and leave researchers and practitioners with different challenges. For instance, current test procedures do not suffice for fully automated vehicles, which are supposed to be completely in charge for the driving task and have no driver as a back up. This paper presents current challenges of testing the functionality and safety of automated vehicles derived from conducting focus groups and interviews with 26 participants from five countries having a background related to testing automotive safety-related topics.We provide an overview of the state-of-practice of testing active safety features as well as challenges that needs to be addressed in the future to ensure safety for automated vehicles. The major challenges identified through the interviews and focus groups, enriched by literature on this topic are related to 1) virtual testing and simulation, 2) safety, reliability, and quality, 3) sensors and sensor models, 4) required scenario complexity and amount of test cases, and 5) handover of responsibility between the driver and the vehicle.","tags":null,"title":"Paving the Roadway for Safety of Automated Vehicles: An Empirical Study on Testing Challenges","type":"publication"},{"authors":["Eklund, Ulrik and Berger, Christian"],"categories":null,"content":"","date":1493596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493596800,"objectID":"404a51c06c5e64fd62bbe3fcd8596487","permalink":"https://chrberger.github.io/publication/eb17/","publishdate":"2017-05-01T00:00:00Z","relpermalink":"/publication/eb17/","section":"publication","summary":"Agile software development principles enable companies to successfully and quickly deliver software by meeting their customers' expectations while focusing on high quality. Many companies working with pure software systems have adopted these principles, but implementing them in companies dealing with non-pure software products is challenging. We identified a set of goals and practices to support large-scale agile development in companies that develop software-intense mechatronic systems. We used an inductive approach based on empirical data collected during a longitudinal study with six companies in the Nordic region. The data collection took place over two years through focus group workshops, individual on-site interviews, and complementary surveys. The primary benefit of large-scale agile development is improved quality, enabled by practices that support regular or continuous integration between teams delivering software, hardware, and mechanics. In this regard, the most beneficial integration cycle for deliveries is every four weeks; while continuous integra- tion on a daily basis would favor software teams, other disciplines does not seem to benefit from faster integration cycles. We identified 108 goals and development practices supporting agile principles among the companies, most of them concerned with integration; therefrom, 26 agile practices are unique to the mechatronics domain to support adopting agile beyond pure software development teams. 16 of these practices are considered as key enablers, confirmed by our control cases.","tags":null,"title":"Scaling Agile Development in Mechatronic Organizations -- A Comparative Case Study","type":"publication"},{"authors":["Knauss, Alessia and Schroeder, Jan and Berger, Christian and Eriksson, Henrik"],"categories":null,"content":"","date":1493596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493596800,"objectID":"4a4fc63411f9060ee7f035a541ff754d","permalink":"https://chrberger.github.io/publication/ksbe17a/","publishdate":"2017-05-01T00:00:00Z","relpermalink":"/publication/ksbe17a/","section":"publication","summary":"Automated vehicles are not supposed to fail at any time or in any situations during driving. Thus, vehicle manufactures and proving ground operators are challenged to complement existing test procedures with means to systematically evaluate automated driving. In this paper, we explore softwarerelated challenges from testing the safety of automated vehicles. We report on findings from conducting focus groups and interviews including 26 participants (e.g., vehicle manufacturers, suppliers, and researchers) from five countries.","tags":null,"title":"Software-Related Challenges of Testing Automated Vehicles","type":"publication"},{"authors":["Berger, Christian and Nguyen, BjÃ¶rnborg and Benderius, Ola"],"categories":null,"content":"","date":1491004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491004800,"objectID":"f5e1df1fb3c3742571549eaf0563361f","permalink":"https://chrberger.github.io/publication/bnb17/","publishdate":"2017-04-01T00:00:00Z","relpermalink":"/publication/bnb17/","section":"publication","summary":"In this paper, experiences and best practices from using containerized software microservices for self-driving vehicles are shared. We applied the containerized software paradigm successfully to both the software development and deployment to turn our software architecture in the vehicles following the idea of microservices. Key enabling elements include onboarding of new developers, both researchers and students, traceable development and packaging, convenient and bare-bone deployment, and traceably archiving binary distributions of our quickly evolving software environment. In this paper, we share our experience from working one year with containerized development and deployment for our self-driving vehicles highlighting our reflections and application-specific shortcomings; our approach uses several components from the widely used Docker ecosystem, but the discussion in this paper generalizes these concepts. We conclude that the growingly complex automotive software systems in combination with their computational platforms should be rather understood as datacenters on wheels to design both, (a) the software development and deployment processes, and (b) the software architecture in such a way to enable continuous integration, continuous deployment, and continuous experimentation.","tags":null,"title":"Containerized Development and Microservices for Self-Driving Vehicles: Experiences \u0026 Best Practices","type":"publication"},{"authors":["Giaimo, Federico and Berger, Christian"],"categories":null,"content":"","date":1491004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491004800,"objectID":"5ba68624ace4d555173f16dccf1d00a0","permalink":"https://chrberger.github.io/publication/gb17/","publishdate":"2017-04-01T00:00:00Z","relpermalink":"/publication/gb17/","section":"publication","summary":"The software powering today's vehicles surpasses mechatronics as the dominating engineering challenge due to its fast evolving and innovative nature. In addition, the software and system architecture for upcoming vehicles with automated driving functionality is already processing ~750MB/s - corresponding to over 180 simultaneous 4K-video streams from popular video-on-demand services. Hence, self-driving cars will run so much software to resemble small data centers on wheels rather than just transportation vehicles. Continuous Integration, Deployment, and Experimentation have been successfully adopted for software-only products as enabling methodology for feedback-based software development. For example, a popular search engine conducts ~250 experiments each day to improve the software based on its users' behavior. This work investigates design criteria for the software architecture and the corresponding software development and deployment process for complex cyber-physical systems, with the goal of enabling Continuous Experimentation as a way to achieve continuous software evolution. Our research involved reviewing related literature on the topic to extract relevant design requirements. The study is concluded by describing the software development and deployment process and software architecture adopted by our self-driving vehicle laboratory, both based on the extracted criteria.","tags":null,"title":"Design Criteria to Architect Continuous Experimentation for Self-Driving Vehicles","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Knauss, Alessia and Preenja, Harri and Ali, Mohammad and Staron, Miroslaw and Herpel, Thomas"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"e6f4efe6583ceff36f6bb8baa2db4378","permalink":"https://chrberger.github.io/publication/sbk+17a/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/sbk+17a/","section":"publication","summary":"","tags":null,"title":"Comparison of Model Size Predictors in Practice","type":"publication"},{"authors":["Masek, Philip and Thulin, Magnus and Andrade, Hugo and Berger, Christian and Benderius, Ola"],"categories":null,"content":"","date":1477958400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477958400,"objectID":"e9622a4cd0437604e8630d7e11073968","permalink":"https://chrberger.github.io/publication/mta+16/","publishdate":"2016-11-01T00:00:00Z","relpermalink":"/publication/mta+16/","section":"publication","summary":"Companies developing and maintaining software-only products like web shops aim for establishing persistent links to their software running in the field. Monitoring data from real usage scenarios allows for a number of improvements in the software life-cycle, such as quick identification and solution of issues, and elicitation of requirements from previously unexpected usage. While the processes of continuous integration, continuous deployment, and continuous experimentation using sandboxing technologies are becoming well established in said software-only products, adopting similar practices for the automotive domain is more complex mainly due to real-time and safety constraints. In this paper, we systematically evaluate sandboxed software deployment in the context of a self-driving heavy vehicle that participated in the 2016 Grand Cooperative Driving Challenge (GCDC) in The Netherlands. We measured the system's scheduling precision after deploying applications in four different execution environments. Our results indicate that there is no significant difference in performance and overhead when sandboxed environments are used compared to natively deployed software. Thus, recent trends in software architecting, packaging, and maintenance using microservices encapsulated in sandboxes will help to realize similar software and system engineering for cyber-physical systems.","tags":null,"title":"Systematic Evaluation of Sandboxed Software Deployment for Real-time Software on the Example of a Self-Driving Heavy Vehicle","type":"publication"},{"authors":["Berger, Christian and Benderius, Ola"],"categories":null,"content":"","date":1472688000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472688000,"objectID":"436f7e25cdcb002e8caf6f161b3d763c","permalink":"https://chrberger.github.io/publication/ber16/","publishdate":"2016-09-01T00:00:00Z","relpermalink":"/publication/ber16/","section":"publication","summary":"The mission of Chalmers Resource for Vehicle Research (Revere) laboratory is to provide state-of-the-art vehicular technology and support to enable and conduct research around automated driving ranging from fundamental algorithms up to complex experiments at the proving AstaZero. Our vehicle laboratory houses a Volvo XC90, a Volvo FH 16, and a fleet of self-driving scaled cars. As a resource accessible to different research groups at Chalmers, where different functionality with varying goals needs to be realized and tested, a software engineering process is required supporting this flexibility while preserving basic platform functionality. In this paper, we are reporting about our experience from using encapsulated software build environments to easily include new developers on the one hand and to achieve seamless deployment to the vehicular environment.","tags":null,"title":"Encapsulated Software Build Environments on the Example of a Self-Driving Heavy Vehicle","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and Meding, Wilhelm"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"b3a5ac8cda944255b3b4b5ba06ebee89","permalink":"https://chrberger.github.io/publication/rsb+16/","publishdate":"2016-07-01T00:00:00Z","relpermalink":"/publication/rsb+16/","section":"publication","summary":"Abstract Tracking and predicting quality and reliability is a major challenge in large and distributed software development projects. A number of standard distributions have been successfully used in reliability engineering theory and practice, common among these for modeling software defect inflow being exponential, Weibull, beta and Non-Homogeneous Poisson Process (NHPP). Although standard distribution models have been recognized in reliability engineering practice, their ability to fit defect data from proprietary and OSS software projects is not well understood. Lack of knowledge about underlying defect inflow distribution also leads to difficulty in applying Bayesian based inference methods for software defect prediction. In this paper we explore the defect inflow distribution of total of fourteen large software projects/release from two industrial domain and open source community. We evaluate six standard distributions for their ability to fit the defect inflow data and also assess which information criterion is practical for selecting the distribution with best fit. Our results show that beta distribution provides the best fit to the defect inflow data for all industrial projects as well as majority of OSS projects studied. In the paper we also evaluate how information about defect inflow distribution from historical projects is applied for modeling the prior beliefs/experience in Bayesian analysis which is useful for making software defect predictions early during the software project lifecycle.","tags":null,"title":"Analyzing defect inflow distribution and applying Bayesian inference method for software defect prediction in large software projects","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Staron, Miroslaw and Herpel, Thomas and Knauss, Alessia"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"ffcd36f03da7dbe6d9ec694ff77a587f","permalink":"https://chrberger.github.io/publication/sbs+16/","publishdate":"2016-07-01T00:00:00Z","relpermalink":"/publication/sbs+16/","section":"publication","summary":"The validation of simulation models (e.g., of electronic control units for vehicles) in industry is becoming increasingly challenging due to their growing complexity. To systematically assess the quality of such models, software metrics seem to be promising. In this paper we explore the use of software metrics and outlier analysis as a means to assess the quality of model-based software. More specifically, we investigate how results from regression analysis applied to measurement data received from size and complexity metrics can be mapped to software quality. Using the moving averages approach, models were fit to data received from over 65,000 software revisions for 71 simulation models that represent different electronic control units of real premium vehicles. Consecutive investigations using studentized deleted residuals and Cook's Distance revealed outliers among the measurements. From these outliers we identified a subset, which provides meaningful information (anomalies) by comparing outlier scores with expert opinions. Eight engineers were interviewed separately for outlier impact on software quality. Findings were validated in consecutive workshops. The results show correlations between outliers and their impact on four of the considered quality characteristics. They also demonstrate the applicability of this approach in industry.","tags":null,"title":"Unveiling anomalies and their impact on software quality in model-based automotive software revisions with software metrics and domain experts","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462060800,"objectID":"6f14b426024b1a52504cfb4d8d25dca3","permalink":"https://chrberger.github.io/publication/ber16a/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/ber16a/","section":"publication","summary":"Self-driving vehicles are an ongoing research and engineering topic even though first automotive OEMs started to deploy such features to their premium vehicles. Chalmers University of Technology and University of Gothenburg are operating and maintaining a vehicle laboratory comprising 1/10 scaled cars, a Volvo XC90, and a Volvo FH truck to conduct studies with automated driving. This laboratory is used both from researchers from different disciplines and in education. The experimental software for all these platforms is powered by the same software environment for different hardware architectures. Therefore, maintaining and deploying new features and bugfixes to the users of this laboratory in a fast way needs to be organized in a reproducible yet easily maintainable manner. This paper outlines our open approach to encapsulate our build, test, and deployment process using VirtualBox, Docker, and Jenkins.","tags":null,"title":"An Open Continuous Deployment Infrastructure for a Self-driving Vehicle Ecosystem","type":"publication"},{"authors":["Giaimo, Federico and Yin, Hang and Berger, Christian and Crnkovic, Ivica"],"categories":null,"content":"","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462060800,"objectID":"201f72ac35077031c8577e2608a8b1cd","permalink":"https://chrberger.github.io/publication/gybc16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/gybc16/","section":"publication","summary":"","tags":null,"title":"Continuous Experimentation on Cyber-Physical Systems: Challenges and Opportunities","type":"publication"},{"authors":["Knauss, Alessia and Berger, Christian and Eriksson, Henrik"],"categories":null,"content":"","date":1462060800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462060800,"objectID":"a5729886ade2980d9639c7b9f664292d","permalink":"https://chrberger.github.io/publication/kbe16/","publishdate":"2016-05-01T00:00:00Z","relpermalink":"/publication/kbe16/","section":"publication","summary":"Cyber-physical systems integrate computational and physical processes and allow for smart applications like smart transportation, smart buildings, and safety systems. While some applications support us in our daily life, others are safety-critical like vehicular active safety systems. Systematic testing of such critical cyber-physical systems is a crucial, but very challenging task that so far has received little research attention. In this paper, we present an investigation on the state-of-the-art and future trends of testing critical cyber-physical systems on the example of active safety systems for vehicles. We conducted four focus groups with Swedish industrial partners as well as systematically studied proceedings of a recent active safety conference. Our results show that while the main testing processes and scenarios are supported, there is a clear need to enable testing of more complex scenarios in realistic settings, as well as increasing the degree of automating therefor to achieve better repeatability and a more effective test resource usage.","tags":null,"title":"Towards state-of-the-art and future trends in testing of active safety systems","type":"publication"},{"authors":["Yin, Hang and Giaimo, Federico and Andrade, Hugo and Berger, Christian and Crnkovic, Ivica"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"f6595df3fef3ab81d24acf68c7f468e2","permalink":"https://chrberger.github.io/publication/yga+16/","publishdate":"2016-04-01T00:00:00Z","relpermalink":"/publication/yga+16/","section":"publication","summary":"Message exchange between distributed software components in cyber-physical systems is a frequent and resource-demanding activity. Existing data description languages simply map user-specified messages literally to the system implementation creating the data stream that is exchanged between the software components; however, our research shows that the exchanged information is often redundant and would allow for runtime optimization. In this paper, we propose a model-based approach for adaptive message restructuring. Taking both design-time properties and runtime properties into account, we propose to dynamically restructure user-specified messages to achieve better resource usage (e.g., reduced latency). Our model-based workflow also includes formal verification of adaptive message restructuring in the presence of complex data flow. This is demonstrated by an automotive example.","tags":null,"title":"Adaptive Message Restructuring Using Model-Driven Engineering","type":"publication"},{"authors":["GÃ³mez, Gaspar Luis Gil and Vestlund, Johannes and Bakker, Egbert and Berger, Christian and Nybacka, Mikael and Drugge, Lars"],"categories":null,"content":"","date":1459468800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459468800,"objectID":"8b79d31b76d3ecc256413e502888d48f","permalink":"https://chrberger.github.io/publication/gvb+16/","publishdate":"2016-04-01T00:00:00Z","relpermalink":"/publication/gvb+16/","section":"publication","summary":"AbstractVehicle dynamics development relies on subjective assessments (SA), which is a resource-intensive procedure requiring both expert drivers and vehicles. Furthermore, development projects becoming shorter and more complex, and increasing demands on quality require higher efficiency. Most research in this area has focused on moving from physical to virtual testing. However, SA remains the central method. Less attention has been given to provide better tools for the SA process itself. One promising approach is to introduce computer-tablets to aid data collection, which has proven to be useful in medical studies. Simple software solutions can eliminate the need to transcribe data and generate more flexible and better maintainable questionnaires. Tablets' technical features envision promising enhancements of SA, which also enable better correlations to objective metrics, a requirement to improve CAE evaluations. However, it cannot be assumed that a tablet-based solution is feasible in vehicle dynamics SA context. Any distraction might result in low SA quality and safety issues when test-drivers are subjected to high mental workload pushing the vehicles to their performance-limits. In this study, a SA tablet-software for steering feel, handling, and ride was developed and systematically evaluated versus the traditional pen-and-paper method. The results indicate that the new approach is technically feasible in this context, meets more use-cases, and the drivers' attitude towards it is positive. It increased questionnaire completion and rating resolution while reducing the error rate and transcription time. Although attendees reported that the paper-based approach has advantages from a usability point of view, the benefits of the tablet-based approach enable further process-related advantages.","tags":null,"title":"Improving Subjective Assessment of Vehicle Dynamics Evaluations by means of Computer-Tablets as Digital Aid","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Nilsso, Agneta and Scandariato, Riccardo and Weilenmann, Alexandra and Rydmark, Martin"],"categories":null,"content":"","date":1446336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1446336000,"objectID":"7e656b470597f4ea67e9e3f9b8fc2bbb","permalink":"https://chrberger.github.io/publication/rsb+15/","publishdate":"2015-11-01T00:00:00Z","relpermalink":"/publication/rsb+15/","section":"publication","summary":"Digitalization of society has increased its pace during the last decade. With the introduction of modern technologies (e.g., smartphones) the amount and types of information has increased bringing in both new opportunities and new challenges. In this paper we review the main opportunities and challenges stemming from the heavy use of digital technologies in society. We outline the needs for applying SSE principles and cross-disciplinary research for adequately addressing the challenges of digitalized society. Our position is that without taking a social view for system development and cross-disciplinary research we can only address partial problems related to the digitalization and that by integrating domain-specific disciplines (e.g. financing) with the technology related ones (e.g., software engineering) we could develop holistic solutions for the challenges identified in this paper.","tags":null,"title":"On the role of cross-disciplinary research and SSE in addressing the challenges of the digitalization of society","type":"publication"},{"authors":["Bures, Tomas and Weyns, Danny and Berger, Christian and Biffl, Stefan and Daun, Marian and Gabor, Thomas and Garlan, Barnard David and Gerostathopoulos, Ilias and Julien, Christine and Krikava, Filip and Mordinyi, Richard and Pronios, Nikos B."],"categories":null,"content":"","date":1446336000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1446336000,"objectID":"14d504c84ad890730c4d6231270358ea","permalink":"https://chrberger.github.io/publication/bwb+15/","publishdate":"2015-11-01T00:00:00Z","relpermalink":"/publication/bwb+15/","section":"publication","summary":"","tags":null,"title":"Software Engineering for Smart Cyber-Physical Systems -- Towards a Research Agenda: Report on the First International Workshop on Software Engineering for Smart CPS","type":"publication"},{"authors":["Berger, Christian and Block, Delf and Heeren, SÃ¶nke and Hons, Christian and KÃ¼hnel, Stefan and Leschke, AndrÃ© and Plotnikov, Dimitri and Rumpe, Bernhard"],"categories":null,"content":"","date":1443657600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1443657600,"objectID":"67a19cd0dbc9f5cabe8d6bb687ef107f","permalink":"https://chrberger.github.io/publication/bbh+15b/","publishdate":"2015-10-01T00:00:00Z","relpermalink":"/publication/bbh+15b/","section":"publication","summary":"Context: Consumer tests which assess safety features of modern vehicles have a tradition in Europe. Recently, such test protocols have been substantially extended to also cover active safety systems like Volkswagen's Front Assist. Objective: Simulations for passive safety systems are already a widely adopted approach during vehicle development and internal assessments. As active safety systems are becoming an increasingly important element in a vehicle's safety concept and a differentiating feature, a systematic validation and assessment of such systems is necessary to successfully pass consumer tests and complimentarily identified, relevant traffic scenarios. Method: With this work, we extend our previous conference publication about EuroNCAP CCRs tests by additionally investigating US NCAP scenarios for an AEB system. Therefore, we systematically modeled the allowed variations with a graph where the paths represent concrete test scenarios. These paths are used in a virtual test environment to assess the AEB system. In our previous publication, we illustrated our method of test case generation and simulating consumer test scenarios by showing results of 27 specific test cases. In this work, we focused on integrating a test automatization routine as well as evaluating a set of test cases with a factor of 100 compared to our previous paper. Results: We demonstrate the approach for both EuroNCAP's and US NCAP's CCRs scenarios with a total quantity of more than 2,700 test cases including re-runs to systematically evaluate an AEB algorithm. Our results unveiled varying action points in time for the same initial values for a given consumer test scenario while applying different allowed variations. Conclusion: We foresee the importance of complementary virtual testing for real-world tests on proving grounds especially during the design phase. Our study shows that already small variations that yet accord with the test procedure specification influence the behavior of an active safety system and need to be investigated during development and vehicle testing.","tags":null,"title":"Simulations on Consumer Tests: A Systematic Evaluation Approach in an Industrial Case Study","type":"publication"},{"authors":["Andrade, Hugo and Giaimo, Federico and Berger, Christian and Crnkovic, Ivica"],"categories":null,"content":"","date":1443657600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1443657600,"objectID":"6e4515e5fec167e35b5f1a293539ba9f","permalink":"https://chrberger.github.io/publication/agbc15/","publishdate":"2015-10-01T00:00:00Z","relpermalink":"/publication/agbc15/","section":"publication","summary":"Cyber-physical systems like robots and self-driving vehicles comprise complex software systems. Their software is typ- ically realized as distributed agents that are responsible for dedicated tasks like sensor data handling, sensor data fusion, or action planning. The modular design allows a flexible de- ployment as well as algorithm encapsulation to exchange software modules where needed. Such distributed software exchanges data using a data marshalling layer to serialize and deserialize data structures between a sending and receiving entity. In this article, we are systematically evaluating Google Protobuf, LCM, and our self-adaptive delta marshalling ap- proach by using a generic description language, of which instances can be composed at runtime. Our results show that Google Protobuf performs well for small messages composed mainly by integral field types; the self-adaptive data mar- shalling approach is efficient if four or more fields of type double are present, and LCM outperforms both when a mix of many integral and double fields is used.","tags":null,"title":"Systematic Evaluation of Three Data Marshalling Approaches for Distributed Software Systems","type":"publication"},{"authors":["Giaimo, Federico and Andrade, Hugo and Berger, Christian and Crnkovic, Ivica"],"categories":null,"content":"","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"0424a93e864ede1a5c6b7c22957e2666","permalink":"https://chrberger.github.io/publication/gabc15/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"/publication/gabc15/","section":"publication","summary":"","tags":null,"title":"Improving Bandwidth Efficiency with Self-Adaptation for Data Marshalling on the Example of a Self-Driving Miniature Car","type":"publication"},{"authors":["Berger, Christian and Block, Delf and Hons, Christian and KÃ¼hnel, Stefan and Leschke, AndrÃ© and Plotnikov, Dimitri and Rumpe, Bernhard"],"categories":null,"content":"","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"67ed6e086c87d765c87be0bd55a43763","permalink":"https://chrberger.github.io/publication/bbh+15/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"/publication/bbh+15/","section":"publication","summary":"Context: Recently, test protocols from organizations like European New Car Assessment Programme (EuroNCAP) were extended to also cover active safety systems. Objective: The official EuroNCAP test protocol for Autonomous Emergency Braking (AEB)/Forward Collision Warning (FCW) systems explicitly defines to what extent a Vehicle-Under-Test (VUT) is allowed to vary in its lateral position. In addition, the United States New Car Assessment Programme (US NCAP) test protocol has broader tolerance ranges. The goal for automotive OEMs is to understand the impact of such allowed variations on a the overall vehicle's performance. Method: A simulation-based approach is outlined that allows systematic, large-scale analysis of such influences to effectively plan time-consuming and resource-intense real-world vehicle tests. Our models allow a profound analysis of an AEB algorithm by modeling and conducting more than 3,000 simulation runs with EuroNCAP's dynamic CCRm and CCRb scenarios including those with adopted USNCAP parameters. Results: Our structured analysis of such test procedures involving dynamic actors is the first of its kind in a relevant industrial setting. Several anomalies were unveiled under US NCAP conditions to support real-world test runs. Hence, we could show that the proposed method supports all possible scenarios in AEB consumer tests and scales as we had to timely process approx. 7.7GB of simulation data. Conclusion: To achieve the expected performance and to study a system's behavior in potential misuse cases from a functional point of view, large scale, model-based simulations complement traditional testing on proving ground.","tags":null,"title":"Large-Scale Evaluation of an Active Safety Algorithm with EuroNCAP and US NCAP Scenarios in a Virtual Test Environment -- An Industrial Case Study","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1438387200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438387200,"objectID":"6584a4e33479b739d586b0357b498e14","permalink":"https://chrberger.github.io/publication/ber15b/","publishdate":"2015-08-01T00:00:00Z","relpermalink":"/publication/ber15b/","section":"publication","summary":"","tags":null,"title":"Testing Continuous Deployment with Lightweight Multi-Platform Throw-Away Containers","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1430438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430438400,"objectID":"1b01946d06bb07f38ecc04cacae90ddd","permalink":"https://chrberger.github.io/publication/ber15c/","publishdate":"2015-05-01T00:00:00Z","relpermalink":"/publication/ber15c/","section":"publication","summary":"Engineering software for smart cyber-physical systems (sCPS) challenges developers as they have to deal with uncertain and volatile stimuli data perceived by sensors. Regression testing of a sCPS is time-consuming on sequential execution. However, sequential testing can be parallelized depending on the system calls used in the system-under-test. In a case study about accelerating regression testing for scaled self-driving cars, we evaluate the use of namespace-separation based lightweight virtualization that powers solutions like Dpcker or Google's lmctfy. After transparently adding lightweight virtualization to CxxTest that is used for regression testing, the total test execution time could be reduced from previously over 12min by more than 62% to less than 5min. Thus, the technology for today's lightweight virtualization can also be used to safely accelerate test-runners without changing existing test cases.","tags":null,"title":"Accelerating Regression Testing for Scaled Self-Driving Cars with Lightweight Virtualization -- A Case Study","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Herpel, Thomas"],"categories":null,"content":"","date":1430438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430438400,"objectID":"098cb33be2778244eda4784913f889a1","permalink":"https://chrberger.github.io/publication/bsh15/","publishdate":"2015-05-01T00:00:00Z","relpermalink":"/publication/bsh15/","section":"publication","summary":"Developing automotive functions involves complex software to a growing extent while still following a consecutive waterfall-like development process: Integrating and testing software with other software and with hardware components is conducted towards the final phases during the development. For example, ambiguous requirements or unclear semantics in system interfaces show up very late and mostly not before integration testing. In this article, we are reporting about results from conducting interviews with integration and test engineers at a large automotive OEM about today's most resource-intense challenges when dealing with software integration testing tasks at interconnected hardware-in-the-loop test rig environments. Challenges in processes, communication, and implementation were mentioned most often as emerging topics to be tackled over and over again during this phase in a vehicle series development project.","tags":null,"title":"Challenges from Integration Testing using Interconnected Hardware-in-the-Loop Test Rigs at an Automotive OEM: An Industrial Experience Report","type":"publication"},{"authors":["Schroeder, Jan and Berger, Christian and Herpel, Thomas and Staron, Miroslaw"],"categories":null,"content":"","date":1430438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430438400,"objectID":"3b3503fd73571a50e6ad9dd2f0eb7159","permalink":"https://chrberger.github.io/publication/sbhs15/","publishdate":"2015-05-01T00:00:00Z","relpermalink":"/publication/sbhs15/","section":"publication","summary":"Context: Simulink models are used during software integration testing in the automotive domain on hardware in the loop (HIL) rigs. As the amount of software in cars is increasing continuously, the number of Simulink models for control logic and plant models is growing at the same time. Objective: The study aims for investigating the applicability of three approaches for evaluating model complexity in an industrial setting. Additionally, insights on the understanding of maintainability in industry are gathered. Method: Simulink models from two vehicle projects at a German premium car manufacturer are evaluated by applying the following three approaches: Assessing a model's (a) size, (b) structure, and (c) signal routing. Afterwards, an interview study is conducted followed by an on-site workshop in order to validate the findings. Results: The measurements of 65 models resulted in comparable data for the three measurement approaches. Together with the interview studies, conclusions were drawn on how well each approach reflects the experts' opinions. Additionally, it was possible to get insights on maintainability in an industrial setting. Conclusion: By analyzing the results, differences between the three measurement approaches were revealed. The interviews showed that the expert opinion tends to favor the results of the simple size measurements over the measurement including the signal routing.","tags":null,"title":"Comparing the Applicability of Complexity Measurements for Simulink Models during Integration Testing -- An Industrial Case Study","type":"publication"},{"authors":["Schroeder, Jan and Holzner, Daniela and Berger, Christian and Hoel, Carl-johan and Laine, Leo and Magnusson, Anders"],"categories":null,"content":"","date":1430438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430438400,"objectID":"79e786c794a4b32184d1b10ae63d7f2a","permalink":"https://chrberger.github.io/publication/shb+15/","publishdate":"2015-05-01T00:00:00Z","relpermalink":"/publication/shb+15/","section":"publication","summary":"Self-driving vehicles for commercial use cases like logistics or overcast mines increase their owners' economic competitiveness. Volvo maintains, evolves, and distributes a vehicle control product line for different brands like Volvo Trucks, Renault, and Mack in more than 190 markets world-wide. From the different application domains of their customers originates the need for a multi-domain reference architecture concerned with transport mission planning, execution, and tracking on top of the vehicle control product line. This industrial case study is the first of its kind reporting about the systematic process to design such a reference architecture involving all relevant external and internal stakeholders, development documents, low-level artifacts, and literature. Quantitative and qualitative metrics were applied to evaluate non-functional requirements on the reference architecture level before a concrete variant was evaluated using a Volvo FMX truck in an exemplary construction site setting.","tags":null,"title":"Design and Evaluation of a Customizable Multi-Domain Reference Architecture on top of Product Lines of Self-Driving Heavy Vehicles -- An Industrial Case Study","type":"publication"},{"authors":["Berger, Christian and Eklund, Ulrik"],"categories":null,"content":"","date":1430438400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430438400,"objectID":"190079be49470e1250f4c22339c11b91","permalink":"https://chrberger.github.io/publication/be15/","publishdate":"2015-05-01T00:00:00Z","relpermalink":"/publication/be15/","section":"publication","summary":"Agile software development is increasingly adopted by companies evolving and maintaining software products to support better planning and tracking the realization of user stories and features. While convincing success stories help to further spread the adoption of Agile, mechatronics-driven companies need guidance to implement Agile for non-software teams. In this comparative case study of three companies from the Nordic region, we systematically investigate expectations and challenges from scaling Agile in organizations dealing with mechatronics development by conducting on-site workshops and surveys. Our findings show that all companies have already successfully implemented Agile in their software teams. The expected main benefit of successfully scaling agile development is a faster time-to-market product development; however, the two main challenges are: (a) An inflexible test environment that inhibits fast feedback to changed or added features, and (b) the existing organizational structure including the company's mind-set that needs to be opened-up for agile principles.","tags":null,"title":"Expectations and Challenges from Scaling Agile in Mechatronics-Driven Companies -- A Comparative Case Study","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik and Meding, Wilhelm and HÃ¶glund, Christoffer"],"categories":null,"content":"","date":1414800000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1414800000,"objectID":"8f2561d2da9d2a2794aef9ecc6b69311","permalink":"https://chrberger.github.io/publication/rsb+14c/","publishdate":"2014-11-01T00:00:00Z","relpermalink":"/publication/rsb+14c/","section":"publication","summary":"During software development two important decisions organizations have to make are: (1) how to allocate testing resources optimally and (2) when the software is ready for release. SRGMs (Software Reliability Growth Models) provide empirical basis for evaluating and predicting reliability of software systems. When using SRGMs for the purpose of optimizing testing resource allocation, model's ability to accurately predict the expected defect inflow profile is useful. For assessing release readiness, the asymptote accuracy is the most important attribute. Although more than hundred models for software reliability have been proposed and evaluated over time, there exists no clear guide on which models should be used for a given software development process or for a given industrial domain. Using defect inflow profiles from large software projects from Ericsson, Volvo Car Corporation and Saab EDS we evaluate commonly used SRGMs for their ability to provide empirical basis for making these decisions. We also demonstrate that using defect intensity growth rate from earlier projects increases the accuracy of the predictions. Our results show that Logistic and Gompertz models are the most accurate; we further observe that classifying given project based on its expected shape of defect inflow help to select the most appropriate model.","tags":null,"title":"Selecting software reliability growth models and improving their predictive accuracy using historical projects data","type":"publication"},{"authors":["Mamun, Md Abdullah Al and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1412121600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1412121600,"objectID":"4361f16de9cb95035fce033e960b1e64","permalink":"https://chrberger.github.io/publication/mbh14/","publishdate":"2014-10-01T00:00:00Z","relpermalink":"/publication/mbh14/","section":"publication","summary":"","tags":null,"title":"Explicating, Understanding and Managing Technical Debt from Self-Driving Miniature Car Projects","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1412121600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1412121600,"objectID":"eda59450061955ea456cf7c6cad62423","permalink":"https://chrberger.github.io/publication/ber15/","publishdate":"2014-10-01T00:00:00Z","relpermalink":"/publication/ber15/","section":"publication","summary":"Context: Cyber-physical systems like robotic platforms use sensors to perceive their surroundings. Multiple sensors like infrared, ultrasonic, and incremental encoders help these robots to orient act safely in their environment. Objective: However, finding a valid setup how to connect all sensors to a microcontroller (MCU) and to configure the embedded operating system correctly is hard because a constraint-satisfaction problem (CSP) needs to be solved. Here, a domain-specific language and an accompanying workflow are of great help for users to focus on algorithms instead of solving the CSP over and over again whenever a sensor configuration is adapted. Method: In our previous work, we have focused on modeling the CSP of the aforementioned problem appropriately. In this work, we are presenting SenseDSL, a simple, intuitive, and compact DSL to describe what shall be perceived by an MCU but letting the how to the tooling that processes the DSL's instances. Results: The workflow is realized by using Xtext and Xtend to process DSL artifacts, Prolog to solve the CSP, and a lean layer on top of ChibiOS/RT to interface with the hardware and to enable code reuse for a large variety of MCUs. Conclusion: Features of an embedded system are described in a compact tabular representation in combination with a textual description of the desired sensors to be connected. The model transformation and code generation process verifies the setup, finds automatically the best connection plan for the given sensors, and generates the required code for ChibiOS/RT and an accompanying host application","tags":null,"title":"SenseDSL: Automating the Integration of Sensors for MCU-based Robots and Cyber-Physical Systems","type":"publication"},{"authors":["Berger, Christian and Block, Delf and Heeren, Sonke and Hons, Christian and Kuhnel, Stefan and Leschke, Andre and Plotnikov, Dimitri and Rumpe, Bernhard"],"categories":null,"content":"","date":1412121600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1412121600,"objectID":"74dd0cc64402c96c19b04c93c880bcea","permalink":"https://chrberger.github.io/publication/bbh+14b/","publishdate":"2014-10-01T00:00:00Z","relpermalink":"/publication/bbh+14b/","section":"publication","summary":"Context: Consumer tests for vehicles have long a tradition of almost two decades in Europe to assess vehicular safety abilities. For active safety systems like an emergency braking guard, different consumer-test-organizations (CTOs) around the world intensify now the challenges for automotive Original Equipment Manufacturer (OEM) in terms of specific test protocols. Objective: This work focuses on the systematic generation of possible vehicle trajectories within the allowed tolerance ranges for a simulation environment. It is of great interest to which extent the different test parameters will affect the brake timepoints in each test case as well as the residual velocity in case of a collision with a target vehicle. Method: A formal model using a graph-based representation of the allowed variances based on relevant time-points allows the selection of relevant trajectories as test cases. These trajectories are simulated afterwards to investigate its influence on the system's performance. Results: The systematic approach unveiled varying action points in time of the software of an emergency braking guard, which could influence the overall result of a consumer test. Conclusion: The use of a structured simulative approach for evaluating an active safety system during the development process enables a more focused feedback and supports extensive tests on real proving grounds by systematic and automated robustness analyses for example.","tags":null,"title":"Simulations on consumer tests: A systematic evaluation approach in an industrial case study","type":"publication"},{"authors":["Zug, Sebastian and Steup, Christoph and Scholle, Julian-B. and Berger, Christian and Landsiedel, Olaf and Schuldt, Fabian and Rieken, Jens and Matthaei, Richard and Form, Thomas"],"categories":null,"content":"","date":1412121600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1412121600,"objectID":"bc8e1e3756d07cee1c491e348c749dfb","permalink":"https://chrberger.github.io/publication/zss+14/","publishdate":"2014-10-01T00:00:00Z","relpermalink":"/publication/zss+14/","section":"publication","summary":"The Carolo-Cup competition conducted for the eighth time this year, is an international student competition focusing on autonomous driving scenarios implemented on 1:10 scale car models. Three practical sub-competitions have to be realized in this context and represent a complex, interdisciplinary challenge. Hence, students have to cope with all core topics like mechanical development, electronic design, and programming as addressed usually by robotic applications. In this paper we introduce the competition challenges in detail and evaluate the results of all 13 participating teams from the 2014 competition. For this purpose, we analyze technical as well as non-technical configurations of each student group and derive best practices, lessons' learnt, and criteria as a precondition for a successful participation. Due to the comprehensive orientation of the Carolo-Cup, this knowledge can be applied on comparable projects and related competitions as well.","tags":null,"title":"Technical evaluation of the Carolo-Cup 2014 -- A competition for self-driving miniature cars","type":"publication"},{"authors":["Eliasson, Ulf and Heldal, Rogardt and Lantz, Jonn and Berger, Christian"],"categories":null,"content":"","date":1409529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409529600,"objectID":"7bf7ff5c434a1e5321ec3c80857ecfc2","permalink":"https://chrberger.github.io/publication/ehlb14/","publishdate":"2014-09-01T00:00:00Z","relpermalink":"/publication/ehlb14/","section":"publication","summary":"Model-driven engineering focuses on structuring systems as well as permitting domain experts to be directly involved in the software development. Agile methods aim for fast feedback and providing crucial knowledge early in the project. In our study, we have seen a successful combination of MDE and agile methods to support the development of complex, software-driven mechatronic systems. We have investigated how combining MDE and agile methods can reduce the number of issues caused by erroneous assumptions in the software of these mechatronic systems. Our results show that plant models to simulate mechan- ical systems are needed to enable agile MDE during the mechatronic development. They enable developers to run, verify, and validate models before the mechanical systems are delivered from suppliers. While two case studies conducted at Volvo Car Group confirm that combining MDE and agile works, there are still challenges e.g. how to optimize the development of plant models.","tags":null,"title":"Agile Model-Driven Engineering in Mechatronic Systems -- An Industrial Case Study","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin"],"categories":null,"content":"","date":1409529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409529600,"objectID":"18c5a5bea3256d6fe0e0eb9164d5a1f8","permalink":"https://chrberger.github.io/publication/rsb+14b/","publishdate":"2014-09-01T00:00:00Z","relpermalink":"/publication/rsb+14b/","section":"publication","summary":"Defects are real and observable indicators of software quality that can be analyzed and modelled to track the quality and reliability of software system during development and testing. A number of software reliability growth models (SRGMs) have been introduced and evaluated which are based on different family of distributions such as exponential, Weibull, Non-Homogeneous Poisson Process etc. There exist no standard way of selecting the most appropriate SRGMs for given defect data and further the distribution of defect inflow for real software projects from different industrial domains is also not well documented. In this paper we explore the defect inflow distribution of four large software projects from the automotive domain. We evaluate six standard distributions for their ability to fit the defect inflow data and also assess which information criterion is practical for selecting the distribution with best fit. Our results show that beta distribution provides the best fit to the defect inflow data from all projects with different distribution characteristics. Finding the underlying distribution of defect inflow not only help applying the appropriate statistical techniques for data analysis but also to select the appropriate SRGMs for modelling reliability. The information about defect inflow distribution is further useful for modelling the prior beliefs or experience as prior probabilities in Bayesian analysis.","tags":null,"title":"Analysing defect inflow distribution of automotive software","type":"publication"},{"authors":["Berger, Christian and Dukaczewski, Michael"],"categories":null,"content":"","date":1409529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409529600,"objectID":"808df2751a60421e974ea8276f876087","permalink":"https://chrberger.github.io/publication/bd14/","publishdate":"2014-09-01T00:00:00Z","relpermalink":"/publication/bd14/","section":"publication","summary":"Context: Self-Driving cars are getting more and more attention with public demonstration from all important automotive OEMs but also from companies, which do not have a long history in the automotive industry. Fostered by large international competitions in the last decade, several automotive OEMs have already announced to bring this technology to the market around 2020. Objective: International competitions like the 2007 DARPA Urban Challenge did not focus on efficient usage of resources to realize the self-driving vehicular functionality. Since the automotive industry is very cost-sensitive, realizing reliable and robust self- driving functionality is challenging when expensive and sophisticated sensors mounted very visibly on the vehicle's roof for example cannot be used. Therefore, the goal for this study is to investigate how architectural design decisions of recent self-driving vehicular technology consider resource-efficiency. Method: In a multiple case study, the architectural design decisions derived for resource- constrained self-driving miniature cars for the international competition CaroloCup are compared with architectural designs from recent real-scale self-driving cars. Results: Scaling down available resources for realizing self-driving vehicular technol- ogy puts additional constraints on the architectural design; especially reusability of software components in platform-independent algorithmic concepts are prevailing. Conclusion: Software frameworks like the robotic operating system (ROS) enable fast prototypical solutions; however, architectural support for resource-constrained devices is limited. Here, architectural design drivers as realized in AUTOSAR are more suitable.","tags":null,"title":"Comparison of Architectural Design Decisions for Resource-Constrained Self-Driving Cars -- A Multiple Case-Study","type":"publication"},{"authors":["Berger, Christian and Morales, Oscar and Petig, Thomas and Schiller, Elad Michael"],"categories":null,"content":"","date":1409529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409529600,"objectID":"61279ef7be749187f625167ff4b7b65b","permalink":"https://chrberger.github.io/publication/bmps14/","publishdate":"2014-09-01T00:00:00Z","relpermalink":"/publication/bmps14/","section":"publication","summary":"The design of automated driving systems aims at reducing the human error and increasing the fuel efficiency by letting the vehicles map their surroundings and drive autonomously. One of the system challenges on the road is that at any time the environment can stop meeting the system's operational conditions (and then resume meeting the requirements at some later point in time). Thus, as vehicles map their surroundings, they should also provide information that can help the vehicles to know whether the operational conditions are met with respect to the confidence that they have about the mapped information. We design and implement key services of Local DynamicMaps (LDMs) that are based on on-board and remote sensory information. The LDM provides the position of all nearby noticeable objects along with the LDM's confidence about these positions. The design also includes an extension that allows the vehicular system to agree on the lowest common ability to meet the operational conditions. We evaluate the performance of a key component in our pilot implementation together with a set of test cases that validate the proposed design. Our current findings show that the presented ideas can accelerate the deployment of automated driving systems.","tags":null,"title":"Driving with Confidence: Local Dynamic Maps That Provide LoS for the Gulliver Test-Bed","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and Meding, Wilhelm"],"categories":null,"content":"","date":1409529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409529600,"objectID":"93aa8929756fd40715e8a74582c4e3fa","permalink":"https://chrberger.github.io/publication/rsb+14/","publishdate":"2014-09-01T00:00:00Z","relpermalink":"/publication/rsb+14/","section":"publication","summary":"Existing methods for predicting reliability of software are static and need manual maintenance to adjust to the evolving data sets in software organizations. Machine learning has a potential to address the problem of manual maintenance but can also require changes in how companies works with defect prediction. In this paper we address the problem of identifying what the benefits of machine learning are compared to existing methods and which barriers exist for adopting them in practice. Our methods consist of literature studies and a case study at two companies - Ericsson and Volvo Car Group. By studying literature we develop a framework for adopting machine learning and using case studies we evaluate this framework through a series of four interviews with experts working with predictions at both companies - line manager, quality manager and measurement team leader. The findings of our research show that the most important perceived benefits of adopting machine learning algorithms for defect prediction are accuracy of predictions and ability to generate new insights from data. The two most important perceived barriers in this context are inability to recognize new patterns and low generalizability of the machine learning algorithms. We conclude that in order to support companies in making an informed decision to adopt machine learning techniques for software defect predictions we need to go beyond accuracy and also evaluate factors such as costs, generalizability and competence.","tags":null,"title":"The Adoption of Machine Learning Techniques for Software Defect Prediction: An Initial Industrial Validation","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1404172800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1404172800,"objectID":"d7096c28cfb5c7fa497711a1ba23b81c","permalink":"https://chrberger.github.io/publication/ber14c/","publishdate":"2014-07-01T00:00:00Z","relpermalink":"/publication/ber14c/","section":"publication","summary":"Today's cyber-physical systems (CPS) like advanced driver assistance systems (ADAS) in modern vehicles use a large variety of sensors to process data from their surroundings. Thereby, systems like lane departure warning and adaptive cruise control support the driver in tedious or critical traffic situations. During the development of such systems, engineers also use recorded sensor data in offline validations to complement simulations that exhibit optimal environmental conditions. Such recordings are an ever-growing data source, and thus, effective methods are needed to find proper recordings in databases to support the system validation. Textual annotations for these sensor recordings require a well-defined taxonomy and continuous maintenance. Instead of relying on such a manually maintained taxonomy, an automated method for identifying relevant scenarios from real world sensor recordings by using simulation models is described. The outlined approach is evaluated with real world data sets used by lane-detection algorithms from nine different projects. Results from these data sets of more than 2.3 GB show that finding relevant traffic scenarios is possible in less than 0.15s.","tags":null,"title":"Scenario Pattern Matching in Large Sensor Recordings with Simulation Models for Cyber-Physical Systems","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1401580800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1401580800,"objectID":"cc62135f5a438f002307e05a71211ed6","permalink":"https://chrberger.github.io/publication/ber14/","publishdate":"2014-06-01T00:00:00Z","relpermalink":"/publication/ber14/","section":"publication","summary":"Context: Competitions for self-driving cars facilitated the development and research in the domain of autonomous vehicles towards potential solutions for the future mobility. Objective: Miniature vehicles can bridge the gap between simulation-based evaluations of algorithms relying on simplified models, and those time-consuming vehicle tests on real-scale proving grounds. Method: This article combines findings from a systematic literature review, an in-depth analysis of results and technical concepts from contestants in a competition for self-driving miniature cars, and experiences of participating in the 2013 competition for self-driving cars. Results: A simulation-based development platform for real-scale vehicles has been adapted to support the development of a self-driving miniature car. Furthermore, a standardized platform was designed and realized to enable research and experiments in the context of future mobility solutions. Conclusion: A clear separation between algorithm conceptualization and validation in a model-based simulation environment enabled efficient and riskless experiments and validation. The design of a reusable, low-cost, and energy-efficient hardware architecture utilizing a standardized software/hardware interface enables experiments, which would otherwise require resources like a large real-scale test track.","tags":null,"title":"From a Competition for Self-Driving Miniature Cars to a Standardized Experimental Platform: Concept, Models, Architecture, and Evaluation","type":"publication"},{"authors":["Nilsson, Agneta and Bosch, Jan and Berger, Christian"],"categories":null,"content":"","date":1398902400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1398902400,"objectID":"2a86bfda40f202168961a377c7231608","permalink":"https://chrberger.github.io/publication/nbb14/","publishdate":"2014-05-01T00:00:00Z","relpermalink":"/publication/nbb14/","section":"publication","summary":"While efficient testing arrangements are the key for software companies that are striving for continuous integration, most companies struggle with arranging these highly complex and interconnected testing activities. There is often a lack of an adequate overview of companies' end-to-end testing activities, which tend to lead to problems such as double work, slow feedback loops, too many issues found during post-development, disconnected organizations, and unpredictable release schedules. We report from a multiple case study in which we explore current testing arrangements at five different software development sites. The outcome of the study is a visualization technique of the testing activities involved from unit and component level to product and release level that support the identification of improvement areas. This model for visualizing the end-to-end testing activities for a system has been used to visualize these five cases and has been validated empirically.","tags":null,"title":"Visualizing Testing Activities to Support Continuous Integration: A Multiple Case Study","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1396310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1396310400,"objectID":"3f4be96ca472ba56901f826817f6d2be","permalink":"https://chrberger.github.io/publication/ber14b/","publishdate":"2014-04-01T00:00:00Z","relpermalink":"/publication/ber14b/","section":"publication","summary":"","tags":null,"title":"Saving virtual testing time for CPS by analyzing code coverage on the example of a lane-following algorithm","type":"publication"},{"authors":["Mamun, Md Abdullah Al and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1383264000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1383264000,"objectID":"33880ddb71b25027506811665a1fdb5e","permalink":"https://chrberger.github.io/publication/mbh13/","publishdate":"2013-11-01T00:00:00Z","relpermalink":"/publication/mbh13/","section":"publication","summary":"Robotic platforms serve different use cases ranging from experiments for prototyping assistive applications up to embedded systems for realizing cyber-physical systems in various domains. We are using 1:10 scale miniature vehicles as a robotic platform to conduct research in the domain of self-driving cars and collaborative vehicle fleets. Thus, experiments with different sensors like e.g. ultra-sonic, infrared, and rotary encoders need to be prepared and realized using our vehicle platform. For each setup, we need to configure the hardware/software interface board to handle all sensors and actors. Therefore, we need to find a specific configuration setting for each pin of the interface board that can handle our current hardware setup but which is also flexible enough to support further sensors or actors for future use cases. In this paper, we show how to model the domain of the configuration space for a hardware/software interface board to enable model checking for solving the tasks of finding any, all, and the best possible pin configuration. We present results from a formal experiment applying the declarative languages Alloy and Prolog to guide the process of engineering the hardware/software interface for robotic platforms on the example of a configuration complexity up to ten pins resulting in a configuration space greater than 14.5 million possibilities. Our results show that our domain model in Alloy performs better compared to Prolog to find feasible solutions for larger configurations with an average time of 0.58s. To find the best solution, our model for Prolog performs better taking only 1.38s for the largest desired configuration; however, this important use case is currently not covered by the existing tools for the hardware used as an example in this article.","tags":null,"title":"Engineering the Hardware/Software Interface for Robotic Platforms -- A Comparison of Applied Model Checking with Prolog and Alloy","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1383264000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1383264000,"objectID":"b9c949b7f0e75ed0a749d41336c0af99","permalink":"https://chrberger.github.io/publication/rsb+13/","publishdate":"2013-11-01T00:00:00Z","relpermalink":"/publication/rsb+13/","section":"publication","summary":"","tags":null,"title":"Evaluating long-term predictive power of standard reliability growth models on automotive systems","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1380585600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1380585600,"objectID":"fc008b02c95e76ca2d43b9977f9cd3c8","permalink":"https://chrberger.github.io/publication/rsb+13b/","publishdate":"2013-10-01T00:00:00Z","relpermalink":"/publication/rsb+13b/","section":"publication","summary":"Software Reliability Growth Models (SRGMs) have been used by engineers and managers for tracking and managing the reliability change of software to ensure required standard of quality is achieved before the software is released to the customer. SRGMs can be used during the project to help make testing resource allocation decisions and/ or it can be used after the testing phase to determine the latent faults prediction to assess the maturity of software artifact. A number of SRGMs have been proposed and to apply a given reliability model, defect inflow data is fitted to model equations. Two of the widely known and recommended techniques for parameter estimation are maximum likelihood and method of least squares. In this paper we compare between the two estimation procedures for their applicability in context of NHPP SRGMs. We also highlight a couple of practical considerations, reliability practitioners must be aware of when applying SRGMs.","tags":null,"title":"Comparing between Maximum Likelihood Estimator and Non-Linear Regression estimation procedures for NHPP Software Reliability Growth Modelling","type":"publication"},{"authors":["Mamun, Md Abdullah Al and Berger, Christian and Hansson, JÃ¶rgen"],"categories":null,"content":"","date":1380585600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1380585600,"objectID":"aeb59cf87c006d92e66b19a56d86fbcf","permalink":"https://chrberger.github.io/publication/mbh13b/","publishdate":"2013-10-01T00:00:00Z","relpermalink":"/publication/mbh13b/","section":"publication","summary":"Innovations for today's vehicle functions are mainly driven by software. They realize comfort systems like automated parking but also safety systems where sensors are continuously monitoring the vehicle's surroundings to brake autonomously for avoiding collisions with cars, pedestrians, or bicyclists. In simulation environments, various traffic situations with alternative sensor setups are imitated before testing them on prototypical cars. In this paper, we are presenting an MDE approach for managing different sensor setups in a cyber-physical system development environment to leverage automated model verification, support system testing, and enable code generation. For example, the models are used as the single point of truth to configure and generate sensor setups for system validations in a 3D simulation environment. After their validation, a considered sensor configuration is transformed into a constraint-satisfaction model to be solved by the logical programming language Prolog. Based on this transformation, the conformance to the embedded system specification is formally verified and possible pin assignments, for how to connect the required sensors are calculated. The approach was validated during the development of a self- driving miniature vehicle using an STM32F4-based embedded system running the real-time operating system ChibiOS as the software/hardware interface to the sensors and actors.","tags":null,"title":"MDE-based sensor management and verification for a self-driving miniature vehicle","type":"publication"},{"authors":["Berger, Christian and Katsaros, Panagiotis and Bohlouli, Mahdi and Angelis, Lefteris"],"categories":null,"content":"","date":1377993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1377993600,"objectID":"d9864eee8a3c63225443c65d29c1085e","permalink":"https://chrberger.github.io/publication/bkba13/","publishdate":"2013-09-01T00:00:00Z","relpermalink":"/publication/bkba13/","section":"publication","summary":"","tags":null,"title":"An Interdisciplinary Perspective to the Design and Decision Support of Integral Safety Systems","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1377993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1377993600,"objectID":"9d684ac0e7e602e0702e7c39f909e341","permalink":"https://chrberger.github.io/publication/rsb+13c/","publishdate":"2013-09-01T00:00:00Z","relpermalink":"/publication/rsb+13c/","section":"publication","summary":"Fault injection is widely used for validating dependability of computer systems. These techniques have been traditionally used for testing dependability of the both hardware and software systems. With widespread use of model based development in automotive software development more sophisticated needs arise for using fault injection techniques at the model level, which can yield significant benefits in combination with model-based testing or model mutation. In this paper, we address challenges with injecting faults into behavioral models in terms of analysis of results and propose a framework for distinguishing between correct and incorrect simulation results. The focus is laid on an important challenge encountered when injecting faults in continuous models - managing system- environment interdependencies. We analyze the problem in details and outline an effective approach to deal with this problem.","tags":null,"title":"Improving fault injection in automotive model based development using fault bypass modeling","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"2c1084814a45fe5ed0b0f87589589d55","permalink":"https://chrberger.github.io/publication/rsb+13e/","publishdate":"2013-07-01T00:00:00Z","relpermalink":"/publication/rsb+13e/","section":"publication","summary":"Today software is core part of modern automobiles. The amount, complexity and importance of software components within Electrical/Electronics (E/E) systems of modern cars is only increasing with time. Several automotive functions carrying software provide or interact with safety critical systems such as systems steering and braking and thus assuring functional safety for such systems is of high importance. Requirements for the safety assurance are specified partially by such functional safety standards as ISO 26262. The standard provides the framework and guidelines for the development of hardware and software for components deemed to be safety critical. In this chapter we argue that traditional approaches for safety assurance such as fault injection and mutation testing can be adapted and applied to functional models to enable early verification and validation according to the requirements of ISO 26262. We show how to use fault injection in combination with mutation based testing to identify defects early in the development process - both theoretically and on a case of self-driving miniature vehicles. The argument is grounded upon the current best practices within the industry, a study of ISO 26262 standard, and academic and industrial case studies using fault injection and mutation based testing applied to the functional model level. In this paper we also provide the initial validation of this approach using software of a self-driving miniature vehicle.","tags":null,"title":"Early Verification and Validation According to ISO 26262 by Combining Fault Injection and Mutation Testing","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"79aaad02cc0cdc0feb4d4f27ebdbc44c","permalink":"https://chrberger.github.io/publication/ber13d/","publishdate":"2013-07-01T00:00:00Z","relpermalink":"/publication/ber13d/","section":"publication","summary":"Cyber-physical systems like active safety systems in recent vehicles are significantly driven by software and rely predominantly on data that is perceived by cameras, laser scanners, and the like from the system's environment. For example, these sensor-based systems realize pedestrian protection functionalities, which cannot be tested under simplified conditions on proving grounds only or by arbitrary test-runs on public roads anymore. Instead, simulative environments are used nowadays, which provide the virtual surroundings for such a system where its real input sources are replaced with simplified sensor models. Thus, interactive and hazard-free system tests and automated system evaluations can be carried out easily. However, the simple strategy to run all available modeled traffic scenarios in the simulation on any change of the implementation would consume too much computation time to provide effective and fast feedback for developers. In this article, an improved strategy for selecting scenarios that shall be run in a simulation based on run-time control-flow analysis is proposed, which resulted from the in-depth analysis of the revision history of the source code and their accompanying simulations for two self-driving vehicles. The outlined strategy is evaluated on a self-driving miniature vehicle.","tags":null,"title":"Improving scenario selection for simulations by run-time control-flow analysis","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"4e8b07cbab4efaf478d9969811bed5f3","permalink":"https://chrberger.github.io/publication/rsb+13d/","publishdate":"2013-07-01T00:00:00Z","relpermalink":"/publication/rsb+13d/","section":"publication","summary":"The rapid growth of software intensive active safety functions in modern cars resulted in adoption of new safety development standards like ISO 26262 by the automotive industry. Hazard analysis, safety assessment and adequate verification and validation methods for software and car electronics require effort but in the long run save lives. We argue that in the face of complex software development set-up with distributed functionality, Model-Based Development (MBD) and safety-criticality of software embedded in modern cars, there is a need for evolving existing methods of MBD and complementing them with methods already used in the development of other systems (Fault Injection and Mutation Testing). Our position is that significant effectiveness and efficiency improvements can be made by applying fault injection techniques combined with mutation testing approach for verification and validation of automotive software at the model level. The improvements include such aspects as identification of safety related defects early in the development process thus providing enough time to remove the defects. The argument is based on our industrial case studies, the studies of ISO 26262 standard and academic experiments with new verification and validation methods applied to models.","tags":null,"title":"Increasing Efficiency of ISO 26262 Verification and Validation by Combining Fault Injection and Mutation Testing with Model Based Development","type":"publication"},{"authors":["Rana, Rakesh and Staron, Miroslaw and Mellegaa rd, Niklas and Berger, Christian and Hansson, JÃ¶rgen and Nilsson, Martin and TÃ¶rner, Fredrik"],"categories":null,"content":"","date":1370044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1370044800,"objectID":"4dcf25bf522382d7d9979d93e8b66de2","permalink":"https://chrberger.github.io/publication/rsm+13/","publishdate":"2013-06-01T00:00:00Z","relpermalink":"/publication/rsm+13/","section":"publication","summary":"Reliability and dependability of software in modern cars is of outmost importance. Predicting these properties for software under development is therefore important for modern car OEMs, and using reliability growth models (e.g. Rayleigh, Goel-Okumoto) is one approach. In this paper we evaluate a number of standard reliability growth models on a real software system from automotive industry. The results of the evaluation show that models can be fitted well with defect inflow data but certain parameters need to be adjusted manually in order to predict reliability more precisely in late test phases. In this paper we provide recommendations for how to adjust the models and how the adjustments should be used in the development process of software in the automotive domain by investigating data from an industrial project.","tags":null,"title":"Evaluation of standard reliability growth models in the context of automotive software systems","type":"publication"},{"authors":["Berger, Christian and Dahlgren, Erik and Grunden, Johan and Gunnarsson, Daniel and Holtryd, Nadia and Khazal, Anmar and Mustafa, Mohamed and Papatriantafilou, Marina and Schiller, Elad Michael and Steup, Christoph and Swantesson, Viktor and Tsigas, Philippas"],"categories":null,"content":"","date":1367366400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1367366400,"objectID":"561093415df553f1e107c420a3aadb26","permalink":"https://chrberger.github.io/publication/bdg+13/","publishdate":"2013-05-01T00:00:00Z","relpermalink":"/publication/bdg+13/","section":"publication","summary":"We propose a cyber-physical platform that combines road traffic simulation, network simulation, and physical vehicles to facilitate extensive testing on various levels of vehicular systems. Our design integrates physical and digital vehicles into a common development and testing environment. This paper describes the platform design and presents prototypical implementations that use SUMO, TOSSIM, a 3D sensor simulation environment, and a test-bed of miniature vehicles called Gulliver. As a prototypical implementation, we demonstrate the development of cooperative applications, and by that we achieve: (a) a cyber-physical system that provides a common environment for physical and digital vehicles, (b) a platform to interface communication between physical and digital vehicles, and (c) the ability to tailor testing scenarios in which some system components are simulated digitally and some physically. The suggested design provides flexibility, cost efficiency, and scalable testing opportunities for future vehicular systems. Furthermore, the pro- posed system is able to support novel steps towards intelligent transportation systems for smart cities.","tags":null,"title":"Bridging Physical and Digital Traffic System Simulations with the Gulliver Test-bed","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1364774400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1364774400,"objectID":"06ff565465f3f61143abfb454b8f48c7","permalink":"https://chrberger.github.io/publication/ber13b/","publishdate":"2013-04-01T00:00:00Z","relpermalink":"/publication/ber13b/","section":"publication","summary":"Since 2008, the annual student competition CaroloCup is carried out at Technische Universitaet Braunschweig, Germany with the goal to develop self-driving miniature vehicles in 1:10 scale, which are able to follow the road while considering surrounding obstacles and to park on a sideways parking strip. One major motivation for this competition according the official rules and regulations document is to provide a fictitious yet realistic development project setting where participating students can apply their theoretical knowledge to prepare themselves for their future jobs. A questionnaire was developed to get feedback from participating teams for deriving indicators for the competition's objectives. Results from the first call for participating in the study will be presented and discussed focusing on the students' motivation to participate in such a project on the one hand, and the educational effect with an estimation on the future job's relevance for the development of embedded systems covering selected software engineering topics on the other hand.","tags":null,"title":"Educational Effect of a Student Competition with Self-Driving Cars on Selected Software Engineering Topics","type":"publication"},{"authors":["Berger, Christian and Chaudron, Michel and Heldal, Rogardt and Landsiedel, Olaf and Schiller, Elad M."],"categories":null,"content":"","date":1364774400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1364774400,"objectID":"75e16cf7ec731bb6460abcb08474bdad","permalink":"https://chrberger.github.io/publication/bch+13/","publishdate":"2013-04-01T00:00:00Z","relpermalink":"/publication/bch+13/","section":"publication","summary":"Modern vehicles contain nearly 100 embedded control units to realize various comfort and safety functions. These vehicle functions consist of a sensor, a data processing, and an actor layer to react intelligently to stimuli from their context. Recently, these sensors do not only perceive data from the own vehicle but more often also data from the vehicle's surroundings to understand the current traffic situation. Thus, traditional development and testing processes need to be rethought to ensure the required quality especially for safety-critical systems like a collision prevention system. On the example of 1:10 scale model cars, we outline our model-based and composable simulation approach that enabled the virtualized development of autonomous driving capabilities for model cars to compete in an international competition.","tags":null,"title":"Model-based, Composable Simulation for the Development of Autonomous Miniature Vehicles","type":"publication"},{"authors":["Berger, Christian and Block, Delf and Hons, Christian and KÃ¼hnel, Stefan and Leschke, AndrÃ© and Rumpe, Bernhard and Strutz, Torsten"],"categories":null,"content":"","date":1359676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1359676800,"objectID":"b0dc230fb404e41d28db29bacc981bab","permalink":"https://chrberger.github.io/publication/bbh+13/","publishdate":"2013-02-01T00:00:00Z","relpermalink":"/publication/bbh+13/","section":"publication","summary":"Vehicle's passengers and other traffic participants are protected more and more by integral safety systems. They continuously perceive the vehicle's environment to prevent dangerous situations by e.g. emergency braking systems. Furthermore, increasingly intelligent vehicle functions are still of major interest in research and development to reduce the risk of accidents. However, the development and testing of these functions should not rely only on validations on proving grounds and on long-term test-runs in real traffic; instead, they should be extended by virtual testing approaches to model potentially dangerous situations or to re-run specific traffic situations easily. This article outlines meta-metrics as one of today's challenges for the software engineering of these cyber-physical systems to provide guidance during the system development: For example, unstable results of simulation test-runs over the vehicle function's revision history are elaborated as an indicating metric where to focus on with real or further virtual test-runs; furthermore, varying acting time points for the same virtual traffic situation are indicating problems with the reliability to interpret the specific situation. In this article, several of such meta-metrics are discussed and assigned both to different phases during the series development and to different levels of detailedness of virtual testing approaches.","tags":null,"title":"Meta-Metrics for Simulations in Software Engineering on the Example of Integral Safety Systems","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1351728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1351728000,"objectID":"c3b68e8fb06e9ea3609dc4f13d7ae7cf","permalink":"https://chrberger.github.io/publication/ber12b/","publishdate":"2012-11-01T00:00:00Z","relpermalink":"/publication/ber12b/","section":"publication","summary":"Cloud-based applications like email services or office suites enable real-time collaboration and traceability for shared data from nearly anywhere by using a modern web-browser. Thus, a significant shift has happened to these common applications to focus only on their usage than on their maintenance. However, today's software development projects spent a noteworthy amount of resources to setup and maintain necessary development tools-over and over again. Thus, a similar shift for these development tools in the future would enable to spend valuable resources more on the actual project's goals than on the tools' maintenance. Especially development projects for cyber-physical systems, which interact with the real life's surroundings by relying on sensors and actuators, have specific needs when using cloud-based solutions. In this contribution, preconditions, design decisions, and limitations of a cloud-based testing approach for CPS are outlined and discussed on the example Hesperia. Hesperia bases on the experiences from the development of Caroline - an autonomously driving vehicle for the 2007 DARPA Urban Challenge. Hesperia as a cloud-based testing approach was tested 2009 during the development of an autonomously driving vehicle at the University of California, Berkeley.","tags":null,"title":"Cloud-based Testing for Context-Aware Cyber-Physical Systems","type":"publication"},{"authors":["Berger, Christian and Siegl, Sebastian"],"categories":null,"content":"","date":1351728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1351728000,"objectID":"7d5e167e29fc23bc711ac2e640ddfe00","permalink":"https://chrberger.github.io/publication/bs12/","publishdate":"2012-11-01T00:00:00Z","relpermalink":"/publication/bs12/","section":"publication","summary":"Requirements engineering is nowadays the broadly accepted method to manage a customer's requirements. The result is a specification from which a solution is implemented and which is used to validate the realization in terms of their fulfillment. However, today's tools assist in organizing and tracking the requirements but reliable criteria about their completeness, consistency, and realizability are missing. Furthermore, the resulting artifact is a document, which must be read and understood by humans, which itself is error-prone. It is obvious that errors and ambiguities result in an unwanted solution which is often and in the worst case only discovered in the final stage: Testing. This paper outlines an approach for constructive requirements modeling, which describes completely a customer's demands in a formal manner so that already during the requirements' elicitation inconsistencies are eliminated, completeness is assessed, realizability is ensured, and all valid test cases can be derived by using a model-based testing approach. Therefore, we propose adaptions to the traditional V-model to not only save valuable development and testing time but also to achieve better results. The applicability is shown on the example of the software for an auxiliary heating system at a large German OEM.","tags":null,"title":"Constructive Requirements Modeling -- More Reliable Implementations in a Shorter Time","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1349049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1349049600,"objectID":"a615a2c20df077e47003e4111f784fd7","permalink":"https://chrberger.github.io/publication/ber12c/","publishdate":"2012-10-01T00:00:00Z","relpermalink":"/publication/ber12c/","section":"publication","summary":"Cyber-physical systems are nowadays used as the term for systems which perceive data from their surroundings for algorithmic processing and enrichment by digital information to generate interactions in their specific context. In recent days, a prominent example for these systems are autonomously driving vehicles that continuously have to sense their environment to calculate the next set points for their control algorithms. The development of these complex and interconnected systems requires the combined utilization of simulations and test-runs in reality to assess the system's quality and to increase the developer's and customer's confidence in the resulting implementation. The combination of interactive as well as unattended simulated system tests has to be in tight coordination with their real counterparts to derive reliable results on the one hand and to save valuable resources on the other hand. In this article, the development and test processes of two autonomously driving vehicles are analyzed to derive essential design drivers for a domain-specific language to unify the description, evaluation, and mutual feedback of simulative and real test-runs.","tags":null,"title":"Design considerations for a cyber-physical testing language on the example of autonomous driving","type":"publication"},{"authors":["Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1349049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1349049600,"objectID":"5b2929b7066aac466293952a3679e0e3","permalink":"https://chrberger.github.io/publication/br12a/","publishdate":"2012-10-01T00:00:00Z","relpermalink":"/publication/br12a/","section":"publication","summary":"A larger number of people with heterogeneous knowledge and skills running a project together needs an adaptable, target, and skill-specific engineering process. This especially holds for a project to develop a highly innovative, autonomously driving vehicle to participate in the 2007 DARPA Urban Challenge. In this contribution, we present essential elements of a software and systems engineering process to develop a so-called artificial intelligence capable of driving autonomously in complex urban situations. The process itself includes agile concepts, like a test first approach, continuous integration of all software modules, and a reliable release and configuration management assisted by software tools in integrated development environments. However, one of the most important elements for an efficient and stringent development is the ability to efficiently test the behavior of the developed system in a flexible and modular system simulation for urban situations both interactively and unattendedly. We call this the simulate first approach.","tags":null,"title":"Engineering Autonomous Driving Software","type":"publication"},{"authors":["Berger, Christian and Hinchey, Mike and Rouff, Christopher"],"categories":null,"content":"","date":1349049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1349049600,"objectID":"92fa1c75ad01e0cdb74e2e36d0e16cc3","permalink":"https://chrberger.github.io/publication/bhr12/","publishdate":"2012-10-01T00:00:00Z","relpermalink":"/publication/bhr12/","section":"publication","summary":"The DARPA grand challenges were conducted between 2004 and 2007 and were initiated to foster research in the area of autonomous vehicles. While the first two challenges in 2004 and 2005 dealt with driving in unknown and rough environments without any moving obstacles, the challenge in 2007 increased the overall complexity by requiring correct and safe handling of moving vehicles from other competing autonomous vehicles in an urban setting. The first competition held in 2004 afforded no winner, while the repeated competition in 2005 produced five vehicles which finished the entire course from which four stayed under the ten hour time limit; Stanley the vehicle which was developed at Stanford University was the winner of this first international competition. After a period of less than two years, the community achieved the increased requirements for dealing with real urban-like traffic and afforded six autonomous vehicles from 89 applicants which finished the course within the timelimit. This chapter gives a short overview of the history of the Grand Challenges, discusses the background of the Urban Challenge, as well as goes over high level rules and the qualifying process. The remaining chapters in the book cover aspects of the development of autonomous vehicles ranging from appropriate sensor technology and setup, over reliable detection of the vehicle's surroundings, up to evaluating the environment for deriving a driving decision are covered in the following chapters. Besides, proper software and system development methods are discussed as well.","tags":null,"title":"Introduction","type":"publication"},{"authors":["Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1346457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1346457600,"objectID":"be5a37cb09305f175aef4ae49933ee90","permalink":"https://chrberger.github.io/publication/br12b/","publishdate":"2012-09-01T00:00:00Z","relpermalink":"/publication/br12b/","section":"publication","summary":"In November 2007 the international competition DARPA Urban Challenge took place on the former George Airforce Base in Victorville, California to significantly promote the research and development on autonomously driving vehicles for urban environments. In the final race only eleven out of initially 89 competitors participated and Boss from Carnegie Mellon University succeeded. This paper summarizes results of the research carried out by all finalists within the last five years after the competition and provides an outlook where further investigation especially for software engineering is now necessary to achieve the goal of driving safely and reliably through urban environments with an anticipatory vehicle for the mass-market.","tags":null,"title":"Autonomous Driving -- 5 Years after the Urban Challenge: The Anticipatory Vehicle as a Cyber-Physical System","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1346457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1346457600,"objectID":"f862c63d7d1a8ef665ba060668bc33d6","permalink":"https://chrberger.github.io/publication/ber12a/","publishdate":"2012-09-01T00:00:00Z","relpermalink":"/publication/ber12a/","section":"publication","summary":"In November 2007, the DARPA Urban Challenge took place on the former George Airforce base in Victorville, California. Within that competition, teams from all-over the world had to demonstrate the autonomous driving capabilities from their robot cars in an urban-like environment. From initially 89 competitors, only eleven qualified for the final event wherein Boss from Carnegie Mellon finally won the race. In this article, a short overview over European's best team CarOLO and its vehicle Caroline within that competition is outlined. Based on the experiences from that competition, remaining challenges for the software engineering are described to realize safer cars in the future.","tags":null,"title":"From Autonomous Vehicles to Safer Cars: Selected Challenges for the Software Engineering","type":"publication"},{"authors":["Berger, Christian and Tichy, Matthias"],"categories":null,"content":"","date":1346457600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1346457600,"objectID":"582f8194f9a7b92f2b0fc2529e732134","permalink":"https://chrberger.github.io/publication/bt12/","publishdate":"2012-09-01T00:00:00Z","relpermalink":"/publication/bt12/","section":"publication","summary":"Within the last decade the most important automotive OEMs have created and released the system architecture standard AUTOSAR, and tools to support the development process are widely available. However, the resulting system architecture, which is logically modeled in the Virtual Functional Bus (VFB) and realized by generat- ing a Runtime Environment (RTE) which corresponds to the concrete network of ECUs is static in terms of runtime adaptability. As long as vehicle functions dominate which are executed exclusively on separated ECUs, there is only a limited demand for runtime adaption. However, as soon as several vehicle functions are grouped to run on one ECU or one vehicle function is composed by several independent software components, runtime adaption is getting increasingly interesting regarding energy-efficiency for example. In this paper, a concept of self-adaption for AUTOSAR is outlined on the example of a collision detection and warning system. Its timing correctness during the self-adaption process to fulfill the statically defined system architecture is verified with timed automata and the model checking tool UPPAAL.","tags":null,"title":"Towards Transactional Self-Adaption for AUTOSAR on the Example of a Collision Detection System","type":"publication"},{"authors":["Siegl, Sebastian and Hielscher, Kai-Steffen and German, Reinhard and Berger, Christian"],"categories":null,"content":"","date":1298937600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1298937600,"objectID":"05350c6e09eec89a881e8975b63cd34a","permalink":"https://chrberger.github.io/publication/shgb11/","publishdate":"2011-03-01T00:00:00Z","relpermalink":"/publication/shgb11/","section":"publication","summary":"Embedded software for modern automotive and avionic systems is increasingly complex. In early design phases, even when there is still uncertainty about the feasibility of the requirements, valuable information can be gained from models that describe the expected usage and the desired system reaction. The generation of test cases from these models indicates the feasibility of the intended solution and helps to identify scenarios for which the realization is hardly feasible or the intended system behavior is not properly defined. In this paper we present the formalization of requirements by models to simulate the expected field usage of a system. These so called usage models can be enriched by information about the desired system reaction. Thus, they are the basis for all subsequent testing activities: First, they can be used to verify the first implementation models and design decisions w.r.t. the fulfillment of requirements and second, test cases can be derived in a random or statistic manner. The gen- eration can be controlled with operational profiles that describe different classes of field usage. We have applied our approach at a large German car manufacturer in the early development phase of active safety functionalities. Test cases were generated from the usage models to assess the implementation models in MATLAB/Simulink. The parametrization of the systems could be optimized and a faulty transition in the implementation models was revealed. These design and implementation faults had not been discovered with the established test method.","tags":null,"title":"Automated Testing of Embedded Automotive Systems from Requirement Specification Models","type":"publication"},{"authors":["Siegl, Sebastian and Hielscher, Kai-Steffen and German, Reinhard and Berger, Christian"],"categories":null,"content":"","date":1298937600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1298937600,"objectID":"d5de76c9fe77e29bc74f9e88fca50b2f","permalink":"https://chrberger.github.io/publication/shgb11a/","publishdate":"2011-03-01T00:00:00Z","relpermalink":"/publication/shgb11a/","section":"publication","summary":"Increasingly intelligent energy-management and safety systems are developed to realize safe and economic automobiles. The realization of these systems is only possible with complex and distributed software. This development poses a challenge for verification and validation. Upcoming standards like ISO 26262 provide requirements for verification and validation during development phases. Advanced test methods are requested for safety critical functions. Formal specification of requirements and appropriate testing strategies in different stages of the development cycle are part of it. In this paper we present our approach to formalize the requirements specification by test models. These models serve as basis for the following testing activities, including the automated derivation of executable test cases from it. Test cases can be derived statistically, randomly on the basis of operational profiles, and deterministically in order to be able to perform different testing strategies. We have applied our approach in cooperation with a large German OEM in different development stages of active safety and energy management functionalities. The test cases were executed in model-in-the-loop and in hardware-in-the-loop simulation. With our approach errors were identified both in the requirement specification and in the implementation that were not discovered before.","tags":null,"title":"Formal specification and systematic model-driven testing of embedded automotive systems","type":"publication"},{"authors":["Berger, Christian and Rendel, Holger and Rumpe, Bernhard and Busse, Carsten and Jablonski, Thorsten and Wolf, Fabian"],"categories":null,"content":"","date":1283299200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1283299200,"objectID":"b1122da32f8dbbd595fc567e8e67a53b","permalink":"https://chrberger.github.io/publication/brr+10/","publishdate":"2010-09-01T00:00:00Z","relpermalink":"/publication/brr+10/","section":"publication","summary":"Nowadays, customer products like vehicles do not only contain mechanical parts but also a highly complex software and their manufacturers have to offer many variants of technically very similar systems with sometimes only small differences in their behavior. The proper reuse of software artifacts which realize this behavior using a software product line is discussed in recent literature and appropriate methods and techniques for their management are proposed. However, establishing a software product line for integrating already existing legacy software to reuse valuable resources for future similar products is very company-specific. In this paper, a method is outlined for evaluating objectively a legacy software's potential to create a software product line. This method is applied to several development projects at Volkswagen AG Business Unit Braunschweig to evaluate the software product line potential for steering systems.","tags":null,"title":"Product Line Metrics for Legacy Software in Practice","type":"publication"},{"authors":["Berger, Christian"],"categories":null,"content":"","date":1280620800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1280620800,"objectID":"25f0edb1ee5ed9813169f82c4be39075","permalink":"https://chrberger.github.io/publication/ber10/","publishdate":"2010-08-01T00:00:00Z","relpermalink":"/publication/ber10/","section":"publication","summary":"In projects dealing with autonomous vehicles which are driving in different contexts like highways, urban environments, and rough areas, managing the software's quality for the entire data processing chain of sensor- and actuator-based autonomous systems is increasingly complex. One main reason is the early dependency on all sensor's raw data to setup the data processing chain and to identify subsystems. These sensors' data might be extensive, especially if laser scanners or color camera systems are continuously producing a vast amount of raw data. Moreover, due to this dependency the sensors' setup including their respectively specified mounting positions and calibration information is also necessary to gather real input data from real surroundings' situations of the system. This is even more important before actually starting to integrate independently developed subsystems for carrying out tests for the entire data processing chain. To reduce this dependency and therefore to decouple tasks from the project's critical path, an approach is outlined in this thesis which was developed to support the software engineering for sensor- and actuator-based autonomous systems. This approach relies on customer's requirements and corresponding customer's acceptance criteria as well as the decoupling of the software engineering from the real hardware environment to allow appropriate system simulations. Based on the customer's requirements, formally specified scenarios using a domain specific language are derived which are used to provide surroundings and suitable situations for a sensor- and actuator-based autonomous system. From these formally specified surroundings, the required input data is derived for different layers of a sensor data processing system to generate actions within the system's context. This input data itself depends on a given sensor model to compute its specific raw data. Amongst others, on the example of laser scanners and camera systems, algorithms using modern graphical processing units are outlined to generate the required raw data even for complex situations. To realize the aforementioned aspects, a development environment is necessary consisting of tools for modeling and working with instances of a domain specific language. Furthermore, a software framework is required which provides easily usable and mature solutions for common programming requirements like synchronization for concurrent threads or communication in a high-level point of view. For relying on a consistent and homogeneous software framework for implementing the concepts, a highly portable and real-time-capable software framework for distributed applications was realized which was written entirely from scratch in strictly object-oriented C++. Moreover, this software framework also integrates the formally modeled input data derived from the specified requirements and the sensors' models to allow unattended system simulations to support the acceptance tests for subsystems or an entire system. On the example of autonomous vehicles, the applicability of the approach and the software framework is demonstrated by implementing a vehicle navigation algorithm which uses a given digital map for finding the best route to a desired destination from an arbitrarily chosen starting point. This algorithm was developed considering the test-first-principle and is continuously evaluated by unattended and automatic software tests which are executed on a continuous integration system. Its implementation as well as its evaluation make use of the aforementioned concepts and algorithms. Therefore, the vehicle's surroundings were formally modeled together with its necessary sensors using the provided development tools and environment for performing and evaluating unattended system runs before the algorithm was put into operation on the real vehicle.","tags":null,"title":"Automating Acceptance Tests for Sensor- and Actuator-based Systems on the Example of Autonomous Vehicles","type":"publication"},{"authors":["Mengi, Cem and Babur, Ãnder and Rendel, Holger and Berger, Christian"],"categories":null,"content":"","date":1275350400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1275350400,"objectID":"0fe146b0f1c4c04ebbfb9b718945bcf6","permalink":"https://chrberger.github.io/publication/mbrb10/","publishdate":"2010-06-01T00:00:00Z","relpermalink":"/publication/mbrb10/","section":"publication","summary":"Recent efforts in the automotive domain to initiate a para- digm-shift from a traditional hardware-driven to a function-driven development process create new challenges to tackle. A hardware-driven variant handling mechanism will get more and more inappropriate. Instead, new concepts and methods are necessary to model and configure concrete systems. A software document which is used in the early phase of development is the so called function net model. Variability in function nets is captured implicitly and is strongly dependent on the hardware infrastructure, constraints are collected with informal annotations, and variants are generated manually. This results in a situation where function nets get too complex, time consuming and unsuitable for future standards. In this paper, we will present a model-driven approach for function nets to capture variability explicitly, to express formal constraints, and to generate concrete variants with the support of an automated configuration process. By this, it is possible to use the generated variants as skeletons for virtual prototyping, so that requirement specifications can be verified efficiently.","tags":null,"title":"Model-driven Configuration of Function Net Families in Automotive Software Engineering","type":"publication"},{"authors":["Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1275350400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1275350400,"objectID":"45abaa940c8a1190917729ab25e785b7","permalink":"https://chrberger.github.io/publication/br10/","publishdate":"2010-06-01T00:00:00Z","relpermalink":"/publication/br10/","section":"publication","summary":"Many system-development projects today are mainly driven by the complexity of their software interacting with sensors or actuators in an embedded context. Autonomous vehicle development is a domain where it seems inevitably necessary to apply modern development techniques to cope with complexity, increase development efficiency, and ensure appropriate quality. Furthermore, changes that are triggered by customers or inventions of competitors, as well as bugs, enforce a comprehensible, if necessary, yet agile development process with stringent quality management. In this paper, we describe the agile efficiency- and quality-focused change management mainly based on scenario-driven regression simulation used in the CarOLO project for the development of an autonomously driving vehicle to compete in the 2007 Defense Advanced Research Projects Agency (DARPA) Urban Challenge program. The main contribution is the demonstration of the modern software engineering techniques' applicability to develop distributed embedded systems.","tags":null,"title":"Supporting Agile Change Management by Scenario-Based Regression Simulation","type":"publication"},{"authors":["Biermeyer, Jan and Gonzales, Humberto and Naikal, Nikhil and Templeton, Todd and Sastry, Shankar and Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1264982400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1264982400,"objectID":"1deceba143db0589f4927a725685f41b","permalink":"https://chrberger.github.io/publication/btb+10/","publishdate":"2010-02-01T00:00:00Z","relpermalink":"/publication/btb+10/","section":"publication","summary":"After the three DARPA Grand Challenge contests many groups around the world have continued to actively research and work toward an autonomous vehicle capable of accomplishing a mission in a given context (e.g. desert, city) while following a set of prescribed rules, but none has been completely successful in uncontrolled environments, a task that many people trivially fulfill every day. We believe that, together with improving the sensors used in cars and the artificial intelligence algorithms used to process the information, the community should focus on the systems engineering aspects of the problem, i.e. the limitations of the car (in terms of space, power, or heat dissipation) and the limitations of the software development cycle. This paper explores these issues and our experiences overcoming them.","tags":null,"title":"Rapid Integration and Automatic Calibration for new Sensors using the Berkeley Aachen Robotics Toolkit BART","type":"publication"},{"authors":["Berger, Christian and Rendel, Holger and Rumpe, Bernhard"],"categories":null,"content":"","date":1262304000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1262304000,"objectID":"b61282d82bbf554fd15c5343203c8d85","permalink":"https://chrberger.github.io/publication/brr10/","publishdate":"2010-01-01T00:00:00Z","relpermalink":"/publication/brr10/","section":"publication","summary":"A product line approach can save valuable resources by reusing artifacts. Especially for software artifacts, the reuse of existing components is highly desirable. In recent literature, the creation of software product lines is mainly proposed from a top-down point of view regarding features which are visible by customers. In practice, however, the design for a product line often arises from one or few existing products that descend from a very first product starting with copy-paste and evolving individually. In this contribution, we propose the theoretical basis to derive a set of metrics for evaluating similar software products in an objective manner. These metrics are used to evaluate the set of products' ability to form a product line.","tags":null,"title":"Measuring the Ability to Form a Product Line from Existing Products","type":"publication"},{"authors":["Rauskolb, Fred W. and Berger, Kai and Lipski, Christian and Magnor, Marcus and Cornelsen, Karsten and Effertz, Jan and Form, Thomas and Graefe, Fabian and Ohl, Sebastian and Schumacher, Walter and Wille, JÃ¶rn-Marten and Hecker, Peter and Nothdurft, Tobias and Doering, Michael and Homeier, Kai and Morgenroth, Johannes and Wolf, Lars and Basarke, Christian and Berger, Christian and GÃ¼lke, Tim and Klose, Felix and Rumpe, Bernhard"],"categories":null,"content":"","date":1257033600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1257033600,"objectID":"382244aead10ef4b4706029cffd0af43","permalink":"https://chrberger.github.io/publication/rbl+10/","publishdate":"2009-11-01T00:00:00Z","relpermalink":"/publication/rbl+10/","section":"publication","summary":"The 2007 DARPA Urban Challenge afforded the golden opportunity for the Technische Universitaet Braunschweig to demonstrate its abilities to develop an autonomously driving vehicle to compete with the world's best competitors. After several stages of qualification, our team CarOLO qualified early for the DARPA Urban Challenge Final Event and was among only eleven teams from initially 89 competitors to compete in the final. We had the ability to work together in a large group of experts, each contributing his expertise in his discipline, and significant organisational, financial and technical support by local sponsors who helped us to become the best non-US team. In this report, we describe the 2007 DARPA Urban Challenge, our contribution Caroline, the technology and algorithms along with her performance in the DARPA Urban Challenge Final Event on November 3, 2007.","tags":null,"title":"Caroline: An Autonomously Driving Vehicle for Urban Environments","type":"publication"},{"authors":["Berger, Christian and VÃ¶lkel, Steven and Rumpe, Bernhard"],"categories":null,"content":"","date":1254355200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1254355200,"objectID":"7cf2a7bcd504020d39b8bd73de472d17","permalink":"https://chrberger.github.io/publication/brv09/","publishdate":"2009-10-01T00:00:00Z","relpermalink":"/publication/brv09/","section":"publication","summary":"Unit test environments are today's state of the art for many programming languages to keep the software's quality above a certain level. However, the software's syntactic quality necessary for the developers themselves is not covered by the aforementioned frameworks. This paper presents a tool realized using the DSL framework MontiCore for automatically validating easily extensible coding guidelines for any domain specific language or even general purpose languages like C++ and its application in an automotive R\u0026D project where a German OEM and several suppliers were involved. Moreover, it was exemplary applied on UML/P-based sequence charts as well.","tags":null,"title":"Extensible Validation Framework for DSLs using MontiCore on the Example of Coding Guidelines","type":"publication"},{"authors":["Berger, Christian and GÃ¼lke, Tim and Rumpe, Bernhard"],"categories":null,"content":"","date":1254355200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1254355200,"objectID":"edd4d2387a0d38ac2a13b00042dc1038","permalink":"https://chrberger.github.io/publication/bgr09/","publishdate":"2009-10-01T00:00:00Z","relpermalink":"/publication/bgr09/","section":"publication","summary":"In a high-tech country products are becoming rapidly more complex. To manage the development process as well as to encounter unforeseen challenges, the understanding and thus the explicit modeling of organizational workflows is more important than ever. However, available tools to support this work, in most cases force a new notation upon the company or cannot be adapted to a given publication layout in a reasonable amount of time. Additionally, collaboration among colleagues as well as different business units is complicated and less supported. Since it is of vital importance for a company to be able to change its processes fast and adapt itself to new market situations, the need for tools supporting this evolution is equally crucial. In this paper we present a domain specific language (DSL) developed for modeling a company's workflows. Furthermore, the DSL is embedded in a web-based editor providing transparent access using modern web 2.0 technologies. Results of the DSL's as well as the editor's application to document, model, and improve selected workflows of a German automotive manufacturer are presented.","tags":null,"title":"ProcDSL + ProcEd -- a Web-based Editing Solution for Domain Specific Process-Engineering","type":"publication"},{"authors":["Rauskolb, Fred W. and Berger, Kai and Lipski, Christian and Magnor, Marcus and Cornelsen, Karsten and Effertz, Jan and Form, Thomas and Graefe, Fabian and Ohl, Sebastian and Schumacher, Walter and Wille, JÃ¶rn-Marten and Hecker, Peter and Nothdurft, Tobias and Doering, Michael and Homeier, Kai and Morgenroth, Johannes and Wolf, Lars and Basarke, Christian and Berger, Christian and GÃ¼lke, Tim and Klose, Felix and Rumpe, Bernhard"],"categories":null,"content":"","date":1220227200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1220227200,"objectID":"5df0a7ede060fee5b74e6e3ffab4e6a8","permalink":"https://chrberger.github.io/publication/rbl+08/","publishdate":"2008-09-01T00:00:00Z","relpermalink":"/publication/rbl+08/","section":"publication","summary":"The 2007 DARPA Urban Challenge afforded the golden opportunity for the Technische Universit Braunschweig to demonstrate its abilities to develop an autonomously driving vehicle to compete with the world's best. After several stages of qualification, our team CarOLO qualified early for the DARPA Urban Challenge Final Event and was among only 11 teams from initially 89 competitors to compete in the final. We had the ability to work together in a large group of experts, each contributing his expertise in his discipline, and significant organizational, financial, and technical support by local sponsors, who helped us to become the best non-U.S. team. In this report, we describe the 2007 DARPA Urban Challenge, our contribution, ldquoCaroline,rdquo the technology, and algorithms, along with her performance in the DARPA Urban Challenge Final Event on November 3, 2007.","tags":null,"title":"Caroline: An Autonomously Driving Vehicle for Urban Environments","type":"publication"},{"authors":["Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1214870400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1214870400,"objectID":"7d9fff9a0ea92c767215e0b85f14d387","permalink":"https://chrberger.github.io/publication/br08/","publishdate":"2008-07-01T00:00:00Z","relpermalink":"/publication/br08/","section":"publication","summary":"Mit der Urban Challenge hat die DARPA Ende 2007 ihr erklÃ¤rtes Ziel erreicht, nachzuweisen, dass autonomes Fahren prinzipiell mÃ¶glich ist. In diesem Ar- tikel wird skizziert, welcher Stand tatsÃ¤chlich erreicht wurde und welche Herausforderungen nun bearbeitet werden wollen.","tags":null,"title":"Autonomes Fahren - Erkenntnisse aus der DARPA Urban Challenge (Autonomous Driving - Insights from the DARPA Urban Challenge)","type":"publication"},{"authors":["Basarke, Christian and Berger, Christian and Rumpe, Bernhard"],"categories":null,"content":"","date":1196467200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1196467200,"objectID":"d7923662b4a962f39f67b4fa51a29238","permalink":"https://chrberger.github.io/publication/bbr07/","publishdate":"2007-12-01T00:00:00Z","relpermalink":"/publication/bbr07/","section":"publication","summary":"When a large number of people with heterogeneous knowledge and skills run a project together, it is important to use a sensible engineering process. This especially holds for a project building an intelligent autonomously driving car to participate in the 2007 DARPA Urban Challenge. In this article, we present essential elements of a software and systems engineering process for the development of artificial intelligence capable of driving autonomously in complex urban situations. The process includes agile concepts, like test first approach, continuous integration of every software module and a reliable release and configuration management assisted by software tools in integrated development environments. However, the most important ingredients for an efficient and stringent development are the ability to efficiently test the behavior of the developed system in a flexible and modular simulator for urban situations.","tags":null,"title":"Software \u0026 Systems Engineering Process and Tools for the Development of Autonomous Driving Intelligence","type":"publication"}]